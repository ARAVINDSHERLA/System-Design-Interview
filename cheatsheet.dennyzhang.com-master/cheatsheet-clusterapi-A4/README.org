* CheatSheet: Kubernetes Cluster API                                  :Cloud:
:PROPERTIES:
:type:     kubernetes
:export_file_name: cheatsheet-clusterapi-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-clusterapi-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-clusterapi-A4/cheatsheet-clusterapi-A4.pdf][cheatsheet-clusterapi-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/cloud/][Cloud]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-clusterapi-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Kubernetes Yaml]], [[https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4][Kubectl CheatSheet]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].
** Cluster API - Basic
| Name                          | Summary                                                                   |
|-------------------------------+---------------------------------------------------------------------------|
| [[https://github.com/kubernetes-sigs/cluster-api/milestones][Cluster API Project Milestone]] | v1alpha1(Due by 03/29/2019)                                               |
| Key Initiatives               | Declarative infra; CRD design model; Resource LCM                         |
| CAL (cloud abstraction layer) |                                                                           |
| Boostrap cluster              | minikube by default                                                       |
| Machine Object                | Machine CRD                                                               |
| Cluster Object                |                                                                           |
| clusterctl                    | [[https://github.com/kubernetes-sigs/cluster-api/tree/master/cmd/clusterctl][GitHub: cluster-api/cmd/clusterctl]], Might be merged into kubectl directly |
| Demo                          | [[https://asciinema.org/a/215805][Video: vSphere Clsuter-API provider: self-service]]                         |
** Concepts
| Core Kubernetes | Cluster API       |
|-----------------+-------------------|
| Pod             | Machine           |
| ReplicaSet      | MachineSet        |
| Deployment      | MachineDeployment |
** Components
| Name                         | Summary                                               |
|------------------------------+-------------------------------------------------------|
| API Spec                     | [[https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/0003-cluster-api.md][Link: Kubernetes Cluster Management API]]               |
| provider-components.yaml     |                                                       |
| cluster.yaml                 |                                                       |
| machines.yaml                |                                                       |
| addons.yaml                  |                                                       |
| 2 pods in guest k8s clusters | =cluster api controller=, =cloud provider controller= |
| Reference                    | [[https://github.com/kubernetes-sigs/cluster-api][GitHub: kubernetes-sigs/cluster-api]]                   |
** Commands
| Name                           | Summary                                                                                                                       |
|--------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
| Deploy a k8s cluster           | =clusterctl create cluster -p provider-components.yaml -c cluster.yaml -m machines.yaml --provider vsphere -e ~/.kube/config= |
| Delete a k8s cluster           | =clusterctl delete cluster --kubeconfig=kubeconfig -p provider-components.yaml --bootstrap-type kind=                         |
| List all kind clusters         | =kind get clusters=                                                                                                           |
| Delete kind cluster            | =kind delete cluster --name clusterapi=                                                                                       |
| Create kind clusrer            | =kind create cluster --name clusterapi=                                                                                       |
| SSH to K8S master/worker vm    | =ssh -i /root/.ssh/vsphere_tmp ubuntu@$vm_ip=                                                                                 |
| kubeconfig in new k8s clusters | =/etc/kubernetes/admin.conf= in master VM                                                                                     |
** Cluster API Providers - vsphere
| Name                 | Summary                                                                            |
|----------------------+------------------------------------------------------------------------------------|
| Check controller log | =kubectl logs -n vsphere-provider-system vsphere-provider-controller-manager-0 -f= |
| Vsphere              | [[https://github.com/kubernetes-sigs/cluster-api-provider-vsphere/tree/master/cmd/clusterctl/examples/vsphere][GitHub: Vsphere Example Files]]                                                      |
** Cluster API Related Works
| Name                      | Summary                              |
|---------------------------+--------------------------------------|
| [[https://kubernetes.io/blog/2018/05/17/gardener/][SAP gardener]]              |                                      |
| Gardener with cluster api | [[https://github.com/gardener/gardener/issues/231][GitHub Issue: Adopt Cluster API Spec]] |
** clusterctl cli Online Help
#+BEGIN_EXAMPLE
> go/src/sigs.k8s.io/cluster-api-provider-gcp > ./bin/clusterctl create cluster --help

I0311 17:25:43.924329   50076 machineactuator.go:811] Using the default GCP client
Create a kubernetes cluster with one command

Usage:
  clusterctl create cluster [flags]

Flags:
  -a, --addon-components string               A yaml file containing cluster addons to apply to the internal cluster
      --bootstrap-cluster-cleanup             Whether to cleanup the bootstrap cluster after bootstrap. (default true)
  -e, --bootstrap-cluster-kubeconfig string   Sets the bootstrap cluster to be an existing Kubernetes cluster.
      --bootstrap-flags strings               Command line flags to be passed to the chosen bootstrapper
      --bootstrap-type string                 The cluster bootstrapper to use. (default "none")
  -c, --cluster string                        A yaml file containing cluster object definition. Required.
  -h, --help                                  help for cluster
      --kubeconfig-out string                 Where to output the kubeconfig for the provisioned cluster (default "kubeconfig")
  -m, --machines string                       A yaml file containing machine object definition(s). Required.
      --provider string                       Which provider deployment logic to use (google/vsphere/azure). Required.
  -p, --provider-components string            A yaml file containing cluster api provider controllers and supporting objects. Required.

Global Flags:
      --alsologtostderr                  log to standard error as well as files
      --kubeconfig string                Paths to a kubeconfig. Only required if out-of-cluster.
      --log-flush-frequency duration     Maximum number of seconds between log flushes (default 5s)
      --log_backtrace_at traceLocation   when logging hits line file:N, emit a stack trace (default :0)
      --log_dir string                   If non-empty, write log files in this directory
      --log_file string                  If non-empty, use this log file
      --logtostderr                      log to standard error instead of files (default true)
      --master string                    The address of the Kubernetes API server. Overrides any value in kubeconfig. Only required if out-of-cluster.
      --skip_headers                     If true, avoid header prefixes in the log messages
      --stderrthreshold severity         logs at or above this threshold go to stderr
  -v, --v Level                          number for the log level verbosity
      --vmodule moduleSpec               comma-separated list of pattern=N settings for file-filtered logging
#+END_EXAMPLE
** More Resources
License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].

#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-clusterapi-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-clusterapi-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-clusterapi-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-clusterapi-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO [#A] Release schedule of cluster api project                :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] Use cluster api to replace bosh                        :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] gardener architecture: https://github.com/gardener/gardener :noexport:
https://github.com/gardener/documentation/wiki/Architecture
* TODO OIDC, cluster API; infra CI
* The value & capacity of cluster API                              :noexport:
- declarative infrastructure: bootstrapping and managing a Kubernetes cluster in a declarative way
* Current state & Road map                                         :noexport:
* The history & small chat                                         :noexport:
- Who involved in cluster api community
https://github.com/kubernetes-sigs/cluster-api/graphs/contributors

Google

Vince Prignano: VMware (MTS) -> Heptio
* The overall idea & key design                                    :noexport:
* HALF How provider machine actuator is implemented?
https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/0003-cluster-api.md

https://github.com/kubernetes-sigs/cluster-api#provider-implementations
* TODO How Day-2 operation is done?                                :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Red flag area in cluster api?                               :noexport:
** Why initial maintainers are leaving the open source project?
** Why it makes slow progress?
** How to customize gest k8s cluster provisioning and configuration?
* TODO [#A] cluster api with gcp
https://github.com/kubernetes-sigs/cluster-api-provider-gcp
** ./generate-yaml.sh                                              :noexport:
#+BEGIN_EXAMPLE

   /Users/zdenny/go/src/sigs.k8s.io/cluster-api-provider-gcp/cmd/clusterctl/examples/google  ./generate-yaml.sh                                                                                                                                           master ✔  ✔ 0
(unset)
Generating machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com service account for machine controller
Created service account [machine-controller-test1-ruj7c].
bindings:
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oNF8Dc=
version: 1
bindings:
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oNja1Y=
version: 1
bindings:
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oOBZxg=
version: 1
created key [865a87797e7015baaf8f59d6929a7a171e51260f] of type [json] as [out/machine-controller-serviceaccount.json] for [machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com]
Generating loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com service account for loadbalancers
Created service account [loadbalancer-test1-ruj7c].
bindings:
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oPPK5o=
version: 1
bindings:
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oPqqhE=
version: 1
bindings:
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oQJxEs=
version: 1
bindings:
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oQoORI=
version: 1
created key [670b3f36673d742e718b43edf2f1e3563a9749e0] of type [json] as [out/loadbalancer-serviceaccount.json] for [loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com]
Generating master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com service account for masters
Created service account [master-test1-ruj7c].
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oRxdC4=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oSTDek=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oSt7Jw=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.viewer
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oTOmeQ=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.viewer
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountUser
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
etag: BwWD2oTrjdE=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.viewer
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountUser
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/storage.admin
etag: BwWD2oUFvPw=
version: 1
bindings:
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.instanceAdmin.v1
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.networkAdmin
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.securityAdmin
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/compute.viewer
- members:
  - serviceAccount:loadbalancer-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  - serviceAccount:machine-controller-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountActor
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/iam.serviceAccountUser
- members:
  - user:filebat.Mark@gmail.com
  role: roles/owner
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/storage.admin
- members:
  - serviceAccount:master-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com
  role: roles/storage.objectViewer
etag: BwWD2oUmG4c=
version: 1
Generating worker-test1-ruj7c@denny-gcp-test.iam.gserviceaccount.com service account for workers
Created service account [worker-test1-ruj7c].
Generate SSH key files fo machine controller
Generating public/private rsa key pair.
Your identification has been saved in out/machine-controller-key.
Your public key has been saved in out/machine-controller-key.pub.
The key fingerprint is:
SHA256:tGgmSBT+pM6oPLFLmGXU0J1Usx9qulV1IYpgHdcMWfc clusterapi
The key's randomart image is:
+---[RSA 2048]----+
|  +o o+++.o*o o  |
| o o..o..=..oo o |
|  + o   + o . . E|
| o =   o + o .   |
|  = o + S o      |
|.O   + o .       |
|+.=   . .        |
|+o     o         |
|.oo   .          |
+----[SHA256]-----+
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* HALF kustomize: Error: json: unknown field "commands"            :noexport:
   /Users/zdenny/go/src/sigs.k8s.io/cluster-api-provider-gcp  kustomize build config/default/                                                                                                                                                             master ✔  ✘ 1
Error: json: unknown field "commands"
* HALF kubelet: unknown flag: --bootstrap-kubeconfig on old k8s versions :noexport:
#+BEGIN_EXAMPLE

   /Users/zdenny/go/src/sigs.k8s.io/cluster-api-provider-gcp  ./bin/clusterctl create cluster --provider google -c cmd/clusterctl/examples/google/out/cluster.yaml -m cmd/clusterctl/examples/google/out/machines.yaml -p cmd/clusterctl/examples/google/out/provider-components.yaml -a cmd/clusterctl/examples/google/out/addons.yaml
I0311 17:54:46.380511   56746 machineactuator.go:811] Using the default GCP client
F0311 17:54:46.391617   56746 create_cluster.go:60] no bootstrap provisioner specified, you can specify `--bootstrap-cluster-kubeconfig` to use an existing Kubernetes cluster or `--bootstrap-type` to use a built-in ephemeral cluster
#+END_EXAMPLE
* TODO clusterctl create cluster: error creating a machine object in namespace default :noexport:
#+BEGIN_EXAMPLE
   /Users/zdenny/go/src/sigs.k8s.io/cluster-api-provider-gcp  ./bin/clusterctl create cluster --provider google -c cmd/clusterctl/examples/google/out/cluster.yaml -m cmd/clusterctl/examples/google/out/machines.yaml -p cmd/clusterctl/examples/google/out/provider-components.yaml -a cmd/clusterctl/examples/google/out/addons.yaml --bootstrap-cluster-kubeconfig=/Users/zdenny/.kube/config
I0311 17:58:05.615857   57445 machineactuator.go:811] Using the default GCP client
I0311 17:58:05.623045   57445 createbootstrapcluster.go:27] Creating bootstrap cluster
I0311 17:58:05.633349   57445 clusterdeployer.go:70] Applying Cluster API stack to bootstrap cluster
I0311 17:58:05.633367   57445 applyclusterapicomponents.go:26] Applying Cluster API Provider Components
I0311 17:58:06.788733   57445 clusterdeployer.go:75] Provisioning target cluster via bootstrap cluster
I0311 17:58:06.802514   57445 applycluster.go:36] Creating cluster object test1-frbk5 in namespace "default"
I0311 17:58:06.812276   57445 clusterdeployer.go:84] Creating control plane  in namespace "default"
I0311 17:58:06.826306   57445 applymachines.go:36] Creating machines in namespace "default"
I0311 17:58:06.832395   57445 createbootstrapcluster.go:36] Cleaning up bootstrap cluster.
F0311 17:58:06.832415   57445 create_cluster.go:60] unable to create control plane machine: error creating a machine object in namespace default: Machine.cluster.k8s.io "gce-master-n66f6" is invalid: metadata.labels: Invalid value: "$CLUSTER_NAME": a valid label must be an empty string or consist of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyValue',  or 'my_value',  or '12345', regex used for validation is '(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?')
#+END_EXAMPLE
* TODO hui code                                                    :noexport:
https://github.com/kubernetes-sigs/cluster-api/tree/master/pkg/controller
https://github.com/kubernetes-sigs/cluster-api/tree/master/pkg/provider/example
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] try vsphere cluster api demo                           :noexport:
* TODO Does clusterapi use kubeadm to init and join k8s clusters?  :noexport:
* TODO cluster api k8s worker vm auto healing                      :noexport:
* TODO clusterapi: support most VMs requirement                    :noexport:
take snapshot
attach vm
* TODO clusterapi: clusterctl customize k8s to be more powerful and more secure :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO clusterapi: different vendor 最小公约数                     :noexport:
- create/delete VMs (vsphere?)
- manage vm as typical pod
* TODO clusterapi: support multiple vendor at the same             :noexport:
* TODO clusterapi: take over all infra requirements                :noexport:
Migrate vms
provision ESXi
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO clusterapi: multi-tenancy                                   :noexport:
* TODO clusterapi: vsphere provider vs wcp provider                :noexport:
* TODO clusterapi: infra security                                  :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO WCP Meeting Notes                                           :noexport:
https://docs.google.com/document/d/1WEMQZvUy_zKXMHvfEj_Erw0z83m7sxqodaO23uormDk/edit?usp=sharing
* HALF [#A] WCP: virtual kubelet                                   :noexport:
* WCP: cluster api (talk with go vomomi library)                   :noexport:
- Guest CRD
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO WCP: storage passthrough: for security concern?             :noexport:
* TODO [#A] WCP: Guest customer manager                            :noexport:
* [#A] WCP VM operator project -- CPBU                             :noexport:
VMSet
* TODO [#A] Key design differences between WCP vs ClusterAPI?      :noexport:
- In WCP, the supervisor cluster is a long-running entity.
* TODO [#A] WCP slides                                             :noexport:
** Goals & Values
- Leverage ESXi and other VMware key technologies as solid foundations
- A native pod runtime: run both VMs(CRD) and Pods as workloads on ESXi.
- Align with community upstream practice: cluster API, supervisor cluster as k8s
- Better isolation for the security of workload
** Challenges
- CNABU, CPBU? NSBU, SABU
- Over design: Against community design
- Mixed layer: VM as CRD? In the same level?
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Concept: Supervisor cluster layer, Guest Cluster Layer
** Concept: GCM(Guest cluster manager) namespace, VM API namespace, Cluster API namespace
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** [#A] Value: WCP enables people to run VM workload in a k8s native way. Especially for database
** [#A] How WCP coordinate with cluster API? Do we really need GCM
The supervisor layer does support the core kubernetes schema as well,
however, because it runs directly on the hypervisor, it has some
differences from Kubernetes on Linux. Also because it's a shared
platform, it may move more slowly than open source kubernetes. For
this reason, we require users to explicitly opt-in to acknowledge that
they are using a special purpose kubernetes runtime that may differ
from upstream.
** TODO [#A] Red flag area in WCP?
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Question: kubernetes distro: PKS
With cluster API you can use any kubernetes distro or host OS you want.
** If Cluster-API is too limiting for you, you can always use VMs to DIY your own kubernetes cluster solution.
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** [#A] Question: VMs as CRD? Integration as CRD?
** Question: how easy to customize guest k8s clusters?
** Question: The responsiblity of GCM?
** Question: Severless Pods -> PodVM
** Question: Where pod-vm and DRS are?
** Question: Supervisor cluster: Authentication & Authorization
* TODO WCP: workflow in end users                                  :noexport:
* TODO WCP: supervisor k8s                                         :noexport:
* TODO WCP: kubectl support all vsphere resource                   :noexport:
* TODO WCP: suppoert day0 operation                                :noexport:
* DONE wcp: why Cluster API Namespace is required                  :noexport:
  CLOSED: [2019-03-13 Wed 15:31]
Three typical use cases with new design:
1. VM operators: Use declarative way to manage VM. Run stateful workload(DB) in k8s ecosystem
2. Guest Cluster Manager (GCM): Purpose-built k8s clusters
3. Cluster API: Open source upstream k8s clusters
* DONE clusterctl fails to create cluster                          :noexport:
  CLOSED: [2019-04-04 Thu 14:45]
Need to delete k8s cluster in kind
#+BEGIN_EXAMPLE
root@vagrant:~/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere/out# clusterctl create cluster -p provider-components.yaml -c cluster.yaml -m machines.yaml --provider vsphere --bootstrap-type kind
I0404 20:44:54.306792   26468 createbootstrapcluster.go:27] Creating bootstrap cluster
F0404 20:44:54.444294   26468 create_cluster.go:61] could not create bootstrap cluster: could not create bootstrap control plane: error running command 'kind create cluster --name=clusterapi': exit status 1
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO cluster api improvemnt                                      :noexport:
** performance timing: clone VM: build your own vm template
** vm hot clone
** No detail status
** Need lots of manual configuration
* Using cluster API to provision K8S cluster in Nimbus env         :noexport:
https://github.com/kubernetes-sigs/cluster-api-provider-vsphere/blob/master/docs/self-service/README.md

#+BEGIN_SRC sh
export PATH=$PATH:/usr/local/kubebuilder/bin
export PATH=$PATH:/usr/local/go/bin:/root/cluster-api-provider-vsphere/bin/
#+END_SRC
** Provide configurations                                          :noexport:
*** ubuntu-16.04.json
 #+BEGIN_EXAMPLE
 {
   "DiskProvisioning": "thin",
   "IPAllocationPolicy": "dhcpPolicy",
   "IPProtocol": "IPv4",
   "PropertyMapping": [
     {
       "Key": "instance-id",
       "Value": "ubuntu-16-04-cluster-api-template"
     },
     {
       "Key": "hostname",
       "Value": "ubuntu-16-04-cluster-api-template"
     },
     {
       "Key": "seedfrom",
       "Value": ""
     },
     {
       "Key": "public-keys",
       "Value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgVeeQQo4hQlhMwXCyoWOuRriZF1jjj9lQVWaj+iMg3dfUyFvFwCnSwlHNhO4KJgbil5ZZXl0sJwlZ6aQk5zxOwr52BO8/beZM/hT7Y0lzlrFSnFAVNhtroUIlVU2Qoc1DkEs0LJ8bhBmj3m3iK5J12xWDdsVTEeDqdpSeWHPcP43syMyV5PP8wbmEVzxfz4qyhE5LyEMgSnkawtoxTUy0LJSTnItKjIrzuTNXULFdQ4I50RPi2naWiI8CogDS/Py/K74aZ0SExjuA+8ohnvtEJB7sg3Mm7i+rVoU1RwlkVBb6hJuGNA9m9ZKEIzlX1m5qektcSutDECwPQCO4id3X root@vagrant"
     },
     {
       "Key": "user-data",
       "Value": ""
     },
     {
       "Key": "password",
       "Value": "Admin!23"
     }
   ],
   "NetworkMapping": [
     {
       "Name": "VM Network",
       "Network": "VM Network"
     }
   ],
   "MarkAsTemplate": false,
   "PowerOn": false,
   "InjectOvfEnv": false,
   "WaitForIP": false,
   "Name": "ubuntu-16-04-cluster-api-template"
 }
 #+END_EXAMPLE
*** cluster.yaml
 #+BEGIN_EXAMPLE
 apiVersion: "cluster.k8s.io/v1alpha1"
 kind: Cluster
 metadata:
   name: k8s-cluster-api
 spec:
     clusterNetwork:
         services:
             cidrBlocks: ["10.96.0.0/12"]
         pods:
             cidrBlocks: ["192.168.0.0/16"]
         serviceDomain: "cluster.local"
     providerSpec:
       value:
         apiVersion: "vsphereproviderconfig/v1alpha1"
         kind: "VsphereClusterProviderConfig"
         vsphereUser: "administrator@vsphere.local"
         vspherePassword: "Admin!23"
         vsphereServer: "10.160.101.10"
 #+END_EXAMPLE
*** machines.yaml
 #+BEGIN_EXAMPLE
 apiVersion: "cluster.k8s.io/v1alpha1"
 kind: MachineList
 items:
   - apiVersion: "cluster.k8s.io/v1alpha1"
     kind: Machine
     metadata:
       generateName: k8s-cluster-api-master-
       labels:
         set: master
         cluster.k8s.io/cluster-name: k8s-cluster-api
     spec:
       providerSpec:
         value:
           apiVersion: "vsphereproviderconfig/v1alpha1"
           kind: "VsphereMachineProviderConfig"
           machineSpec:
             datacenter: "datacenter"
             datastore: "nfs0-1"
             resourcePool: "cluster-api"
             vmFolder: "cluster-api"
             networks:
             - networkName: "VM Network"
               ipConfig:
                 networkType: dhcp
                 ip: ""
                 netmask: ""
                 gateway: ""
                 dns:
                 - xxxx
                 - yyyy
             numCPUs: 4
             memoryMB: 4096
             template: "ubuntu-16-04-cluster-api-template"
             disks:
             - diskLabel: "Hard disk 1"
               diskSizeGB: 20
             preloaded: false
       versions:
         kubelet: 1.13.5
         controlPlane: 1.13.5
       roles:
       - Master
 #+END_EXAMPLE
*** machineset.yaml
#+BEGIN_EXAMPLE
apiVersion: "cluster.k8s.io/v1alpha1"
kind: MachineSet
metadata:
  name: k8s-cluster-api-machineset
spec:
  replicas: 2
  selector:
    matchLabels:
      node-type: worker-node
      cluster.k8s.io/cluster-name: k8s-cluster-api
  template:
    metadata:
      labels:
        node-type: worker-node
        cluster.k8s.io/cluster-name: k8s-cluster-api
    spec:
      providerSpec:
        value:
          apiVersion: "vsphereproviderconfig/v1alpha1"
          kind: "VsphereMachineProviderConfig"
          machineSpec:
            datacenter: "datacenter"
            datastore: "nfs0-1"
            resourcePool: "cluster-api"
            vmFolder: "cluster-api"
            networks:
            - networkName: "VM Network"
              ipConfig:
                networkType: dhcp
            numCPUs: 4
            memoryMB: 4096
            template: "ubuntu-16-04-cluster-api-template"
            disks:
            - diskLabel: "Hard disk 1"
              diskSizeGB: 20
            preloaded: false
      versions:
        kubelet: 1.13.5
      roles:
      - Node
#+END_EXAMPLE
*** provider-components.yaml
 #+BEGIN_EXAMPLE
 apiVersion: v1
 kind: Namespace
 metadata:
   labels:
     controller-tools.k8s.io: "1.0"
   name: vsphere-provider-system
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: vsphereclusterproviderconfigs.vsphereproviderconfig.sigs.k8s.io
 spec:
   group: vsphereproviderconfig.sigs.k8s.io
   names:
     kind: VsphereClusterProviderConfig
     plural: vsphereclusterproviderconfigs
   scope: Namespaced
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           type: string
         kind:
           type: string
         metadata:
           type: object
         vspherePassword:
           type: string
         vsphereServer:
           type: string
         vsphereUser:
           type: string
       required:
       - vsphereUser
       - vspherePassword
       - vsphereServer
       type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: vspheremachineproviderconfigs.vsphereproviderconfig.sigs.k8s.io
 spec:
   group: vsphereproviderconfig.sigs.k8s.io
   names:
     kind: VsphereMachineProviderConfig
     plural: vspheremachineproviderconfigs
   scope: Namespaced
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           type: string
         kind:
           type: string
         machineRef:
           type: string
         machineSpec:
           properties:
             datacenter:
               type: string
             datastore:
               type: string
             disks:
               items:
                 properties:
                   diskLabel:
                     type: string
                   diskSizeGB:
                     format: int64
                     type: integer
                 type: object
               type: array
             memoryMB:
               format: int64
               type: integer
             networks:
               items:
                 properties:
                   ipConfig:
                     properties:
                       dns:
                         items:
                           type: string
                         type: array
                       gateway:
                         type: string
                       ip:
                         type: string
                       netmask:
                         type: string
                       networkType:
                         type: string
                     required:
                     - networkType
                     type: object
                   networkName:
                     type: string
                 required:
                 - networkName
                 type: object
               type: array
             numCPUs:
               format: int32
               type: integer
             preloaded:
               type: boolean
             resourcePool:
               type: string
             template:
               type: string
             trustedCerts:
               items:
                 type: string
               type: array
             vmFolder:
               type: string
             vsphereCloudInit:
               type: boolean
           required:
           - datacenter
           - datastore
           - networks
           - template
           - disks
           type: object
         metadata:
           type: object
       type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRole
 metadata:
   creationTimestamp: null
   name: vsphere-provider-manager-role
 rules:
 - apiGroups:
   - apps
   resources:
   - deployments
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - vsphereproviderconfig.sigs.k8s.io
   resources:
   - vsphereclusterproviderconfigs
   - vspheremachineproviderconfigs
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - cluster.k8s.io
   resources:
   - clusters
   - clusters/status
   - machines
   - machines/status
   - machinesets
   - machinedeployments
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - ""
   resources:
   - secrets
   - events
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
 metadata:
   creationTimestamp: null
   name: vsphere-provider-manager-rolebinding
 roleRef:
   apiGroup: rbac.authorization.k8s.io
   kind: ClusterRole
   name: vsphere-provider-manager-role
 subjects:
 - kind: ServiceAccount
   name: default
   namespace: vsphere-provider-system
 ---
 apiVersion: v1
 data:
   vsphere_tmp: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDR3TkVpdGlKS3ZlRUcrZVlHbkorVHhmUVJXRWU1VUszQU45MFlLZzVnc2x6NzJuCkMvTnZlWU1GVFpkVHhSWFBjMFBSdTNFL0FJaHJNbmsxaEo1cUwrd0hlNXoyRGlPTkJJVVhRZ1p4NXpZQ0RIK0MKbFd4b29HaytNYk1udlNNWk5iL0hIMmVWRFhJOEJJQ0d2emZ5dno2aWs0cnh4R2RwRmpUOENtenBUWmxXbXZSZwpSRFJTdENFWkNXWnh1aElRRFNSL3MxOEZFbWhJR3VVU0dNYUp6Y0pLVGVlZGw3d2Rwc1IzZS9KWXkxQ284aDNqCno5cmZJanprOXcrWWhPUXdIdWUvNDJOeFlGZXhFb2tXR2I0dVJTMXppOFRsdDRNenVIQzVvUVlPdDNEOGF1VjYKM1dzR29pTWZSWjl1ejJzTHJrQWpEbHlVTFI2UjdGdzJHbHNFNFFJREFRQUJBb0lCQUdJSUdEY2JHcmtSWG5LUwoyeGtOaDRWcG5FcUxybzIrNWVUcXJIbUk5bHpIbVhOaURPVlNLTGpTcExOelhwZUY5WjNQbkNZcjd3VmUxenBICkNMR0RWcDJ2eDdOYSt3UkVNcDQyWTF5dFNvcStDc3dZRW11eVVoTlRBcGZTNHllZXBtbFJ1NDFuYW5HYkVMa3EKMkUwckdhalJVRTNUU1J1b1M3VkRxVlg4STRPQXVScGFMTUs5eGJzSTROYnAxSUhFU0tLRW92MU43eXJxSzd0YQpiRnFCSWpzWHZNV0NjNi9sTUZmQ2Z0VnJNY1Q0cjQrakp0TURUb09FU2tjQVUyUXFxM3hRdUN0Z0tKRUhZaTZRCk5RWTVpdDB1MU5VelloYzArVmR1cWdGUWpqTWxNU3U3NWJUNkxPWlgxZFlUOWl4YUh6ZnJLOU9kMmFVSndZS3YKK2ltcWorMENnWUVBN0VVLytlaEZYOHVlVGRCcTdGYUwwSUdKVW5GWFJDVVJQOGJ5cno0dFlWa2dwcUZldW1BUgpodzF2aTNVd3JxR2xoK1VIaU9TVzRmVzZrdEtqWTJlTllJVFhtM00zZHhieENMbkhxOWt5dXgxVmVHVVBaaU1NClBockp6WC9sWmN5RG5IVWdYRmF4SVdTTW5sRzY2cGFONnBmaUFBNkJ3WWpKMEhGZ3djYXNWRWNDZ1lFQXh0KzcKdkErcHBDUThzMTN3MnNzV1hHWXYvNndkanp0ZDdwQzhvQ1p6dE91SmYzb1RmcDJUWnZrSU9nTTNhNmkxOFM1TQovZnV2REwwV1A1bWE0ei9NOVZWRTc2UGlYNW41MSt3bEZNK1JCYTN5KzZRWHYzZStWRlVCWTU3QURNbXl6Q1RyCnNERitYdGtxZm9veWRyQ0hHREdVT1J3MGN5WDJkczRBMmx6Q3VaY0NnWUVBcjJlaDNWZ3cyTE9EN09VRDNEMU0KUXhsSDUycTVqSit3Tkpid2FHVlNyMmpKc3FzdWRsTUg4Q2xyWEM4K1d3Y3FxcjYvWDBQRk9DK0R1YWlqSUJNcQpoRE5iRmM3dHFIM2hwOGEwazhJRnhhQTdhY3d0S0hod2lGSys2czgrY05ycUFtZDZCTk5mWVJrU3hCNk5FOGQ5CnlHSEZxS0VjZDUranBCbm42VFFqajlVQ2dZQWJCMDlSaU9OcWJvNWRabGdVdEdOT25ZaktlODdzcDRubG9ZQXgKVitpRDN6c3B1eUtwSTZ0ajVGYXM0OEVGZmNGMGpQRmoxMi84RURyVTNBQ0VBQ2pQOHczU2IvaVZPNjBNSG9rUApvZ0k0dm1KMnR0K1BZeXZYOUZHakEzRmdpNDBrVjZROHB3MWd3SzBZMDVsMkxobStQUWJER0VVOG5SMDVHbGhkClZSd1Y4d0tCZ0ZXSDVpME1zWWI0b2pFNURXVzBMUnNDWDRTRE0ycnh5MXA4Y2NHYkpDQlowTm9ucEpLcUU2cnoKbWhUZldlV0xza0g1TDRvZWlUdEhhWEVkdVQzOTFpZWphSFMxaTlmZ2pJNW81VkVJK0pUZnozZldtYm1zcmpEMApMQjZxSEhwK1JyZUtHSFJSSDhYc2Z4blUxSUdhdk01Rmc5UWV1UlFCZTZFSHdsQVh3N01jCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
   vsphere_tmp.pub: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFDM2pBMFNLMklrcTk0UWI1NWdhY241UEY5QkZZUjdsUXJjQTMzUmdxRG1DeVhQdmFjTDgyOTVnd1ZObDFQRkZjOXpROUc3Y1Q4QWlHc3llVFdFbm1vdjdBZDduUFlPSTQwRWhSZENCbkhuTmdJTWY0S1ZiR2lnYVQ0eHN5ZTlJeGsxdjhjZlo1VU5jandFZ0lhL04vSy9QcUtUaXZIRVoya1dOUHdLYk9sTm1WYWE5R0JFTkZLMElSa0pabkc2RWhBTkpIK3pYd1VTYUVnYTVSSVl4b25Od2twTjU1Mlh2QjJteEhkNzhsakxVS2p5SGVQUDJ0OGlQT1QzRDVpRTVEQWU1Ny9qWTNGZ1Y3RVNpUlladmk1RkxYT0x4T1czZ3pPNGNMbWhCZzYzY1B4cTVYcmRhd2FpSXg5Rm4yN1Bhd3V1UUNNT1hKUXRIcEhzWERZYVd3VGggcm9vdEB2YWdyYW50Cg==
 kind: Secret
 metadata:
   name: vsphere-machine-sshkeys-md4fckk744
   namespace: vsphere-provider-system
 type: Opaque
 ---
 apiVersion: v1
 kind: Service
 metadata:
   labels:
     control-plane: vsphere-provider-controller-manager
     controller-tools.k8s.io: "1.0"
   name: vsphere-provider-controller-manager-service
   namespace: vsphere-provider-system
 spec:
   ports:
   - port: 443
   selector:
     control-plane: vsphere-provider-controller-manager
     controller-tools.k8s.io: "1.0"
 ---
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
   labels:
     control-plane: vsphere-provider-controller-manager
     controller-tools.k8s.io: "1.0"
   name: vsphere-provider-controller-manager
   namespace: vsphere-provider-system
 spec:
   selector:
     matchLabels:
       control-plane: vsphere-provider-controller-manager
       controller-tools.k8s.io: "1.0"
   serviceName: vsphere-provider-controller-manager-service
   template:
     metadata:
       labels:
         control-plane: vsphere-provider-controller-manager
         controller-tools.k8s.io: "1.0"
     spec:
       containers:
       - args:
         - --logtostderr
         command:
         - /root/manager
         env:
         - name: NODE_NAME
           valueFrom:
             fieldRef:
               fieldPath: spec.nodeName
         image: denny/vsphere-cluster-api-provider:trial
         name: manager
         resources:
           limits:
             cpu: 400m
             memory: 500Mi
           requests:
             cpu: 200m
             memory: 200Mi
         volumeMounts:
         - mountPath: /etc/kubernetes
           name: config
         - mountPath: /etc/ssl/certs
           name: certs
         - mountPath: /tmp/cluster-api/machines
           name: machines-stage
         - mountPath: /root/.ssh/vsphere_tmp
           name: sshkeys
           subPath: vsphere_tmp
         - mountPath: /root/.ssh/vsphere_tmp.pub
           name: sshkeys
           subPath: vsphere_tmp.pub
         - mountPath: /usr/bin/kubeadm
           name: kubeadm
       terminationGracePeriodSeconds: 10
       tolerations:
       - effect: NoSchedule
         key: node-role.kubernetes.io/master
       - key: CriticalAddonsOnly
         operator: Exists
       - effect: NoExecute
         key: node.alpha.kubernetes.io/notReady
         operator: Exists
       - effect: NoExecute
         key: node.alpha.kubernetes.io/unreachable
         operator: Exists
       volumes:
       - hostPath:
           path: /etc/kubernetes
         name: config
       - hostPath:
           path: /etc/ssl/certs
         name: certs
       - emptyDir: {}
         name: machines-stage
       - name: sshkeys
         secret:
           defaultMode: 384
           secretName: vsphere-machine-sshkeys-md4fckk744
       - hostPath:
           path: /usr/bin/kubeadm
         name: kubeadm
 ---
 apiVersion: v1
 kind: Namespace
 metadata:
   labels:
     controller-tools.k8s.io: "1.0"
   name: cluster-api-system
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: clusters.cluster.k8s.io
 spec:
   group: cluster.k8s.io
   names:
     kind: Cluster
     plural: clusters
   scope: Namespaced
   subresources:
     status: {}
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
             of an object. Servers should convert recognized schemas to the latest
             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
           type: string
         kind:
           description: 'Kind is a string value representing the REST resource this
             object represents. Servers may infer this from the endpoint the client
             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
         spec:
           properties:
             clusterNetwork:
               description: Cluster network configuration
               properties:
                 pods:
                   description: The network ranges from which Pod networks are allocated.
                   properties:
                     cidrBlocks:
                       items:
                         type: string
                       type: array
                   required:
                   - cidrBlocks
                   type: object
                 serviceDomain:
                   description: Domain name for services.
                   type: string
                 services:
                   description: The network ranges from which service VIPs are allocated.
                   properties:
                     cidrBlocks:
                       items:
                         type: string
                       type: array
                   required:
                   - cidrBlocks
                   type: object
               required:
               - services
               - pods
               - serviceDomain
               type: object
             providerSpec:
               description: Provider-specific serialized configuration to use during
                 cluster creation. It is recommended that providers maintain their
                 own versioned API types that should be serialized/deserialized from
                 this field.
               properties:
                 value:
                   description: Value is an inlined, serialized representation of the
                     resource configuration. It is recommended that providers maintain
                     their own versioned API types that should be serialized/deserialized
                     from this field, akin to component config.
                   type: object
                 valueFrom:
                   description: Source for the provider configuration. Cannot be used
                     if value is not empty.
                   properties:
                     machineClass:
                       description: The machine class from which the provider config
                         should be sourced.
                       properties:
                         provider:
                           description: Provider is the name of the cloud-provider
                             which MachineClass is intended for.
                           type: string
                       type: object
                   type: object
               type: object
           required:
           - clusterNetwork
           type: object
         status:
           properties:
             apiEndpoints:
               description: APIEndpoint represents the endpoint to communicate with
                 the IP.
               items:
                 properties:
                   host:
                     description: The hostname on which the API server is serving.
                     type: string
                   port:
                     description: The port on which the API server is serving.
                     format: int64
                     type: integer
                 required:
                 - host
                 - port
                 type: object
               type: array
             errorMessage:
               description: If set, indicates that there is a problem reconciling the
                 state, and will be set to a descriptive error message.
               type: string
             errorReason:
               description: If set, indicates that there is a problem reconciling the
                 state, and will be set to a token value suitable for programmatic
                 interpretation.
               type: string
             providerStatus:
               description: Provider-specific status. It is recommended that providers
                 maintain their own versioned API types that should be serialized/deserialized
                 from this field.
               type: object
           type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: machineclasses.cluster.k8s.io
 spec:
   group: cluster.k8s.io
   names:
     kind: MachineClass
     plural: machineclasses
   scope: Namespaced
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
             of an object. Servers should convert recognized schemas to the latest
             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
           type: string
         kind:
           description: 'Kind is a string value representing the REST resource this
             object represents. Servers may infer this from the endpoint the client
             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
         providerSpec:
           description: Provider-specific configuration to use during node creation.
           type: object
       required:
       - providerSpec
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: machinedeployments.cluster.k8s.io
 spec:
   group: cluster.k8s.io
   names:
     kind: MachineDeployment
     plural: machinedeployments
   scope: Namespaced
   subresources:
     scale:
       labelSelectorPath: .status.labelSelector
       specReplicasPath: .spec.replicas
       statusReplicasPath: .status.replicas
     status: {}
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
             of an object. Servers should convert recognized schemas to the latest
             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
           type: string
         kind:
           description: 'Kind is a string value representing the REST resource this
             object represents. Servers may infer this from the endpoint the client
             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
         spec:
           properties:
             minReadySeconds:
               description: Minimum number of seconds for which a newly created machine
                 should be ready. Defaults to 0 (machine will be considered available
                 as soon as it is ready)
               format: int32
               type: integer
             paused:
               description: Indicates that the deployment is paused.
               type: boolean
             progressDeadlineSeconds:
               description: The maximum time in seconds for a deployment to make progress
                 before it is considered to be failed. The deployment controller will
                 continue to process failed deployments and a condition with a ProgressDeadlineExceeded
                 reason will be surfaced in the deployment status. Note that progress
                 will not be estimated during the time a deployment is paused. Defaults
                 to 600s.
               format: int32
               type: integer
             replicas:
               description: Number of desired machines. Defaults to 1. This is a pointer
                 to distinguish between explicit zero and not specified.
               format: int32
               type: integer
             revisionHistoryLimit:
               description: The number of old MachineSets to retain to allow rollback.
                 This is a pointer to distinguish between explicit zero and not specified.
                 Defaults to 1.
               format: int32
               type: integer
             selector:
               description: Label selector for machines. Existing MachineSets whose
                 machines are selected by this will be the ones affected by this deployment.
                 It must match the machine template's labels.
               type: object
             strategy:
               description: The deployment strategy to use to replace existing machines
                 with new ones.
               properties:
                 rollingUpdate:
                   description: Rolling update config params. Present only if MachineDeploymentStrategyType
                     = RollingUpdate.
                   properties:
                     maxSurge:
                       description: 'The maximum number of machines that can be scheduled
                         above the desired number of machines. Value can be an absolute
                         number (ex: 5) or a percentage of desired machines (ex: 10%).
                         This can not be 0 if MaxUnavailable is 0. Absolute number
                         is calculated from percentage by rounding up. Defaults to
                         1. Example: when this is set to 30%, the new MachineSet can
                         be scaled up immediately when the rolling update starts, such
                         that the total number of old and new machines do not exceed
                         130% of desired machines. Once old machines have been killed,
                         new MachineSet can be scaled up further, ensuring that total
                         number of machines running at any time during the update is
                         at most 130% of desired machines.'
                       oneOf:
                       - type: string
                       - type: integer
                     maxUnavailable:
                       description: 'The maximum number of machines that can be unavailable
                         during the update. Value can be an absolute number (ex: 5)
                         or a percentage of desired machines (ex: 10%). Absolute number
                         is calculated from percentage by rounding down. This can not
                         be 0 if MaxSurge is 0. Defaults to 0. Example: when this is
                         set to 30%, the old MachineSet can be scaled down to 70% of
                         desired machines immediately when the rolling update starts.
                         Once new machines are ready, old MachineSet can be scaled
                         down further, followed by scaling up the new MachineSet, ensuring
                         that the total number of machines available at all times during
                         the update is at least 70% of desired machines.'
                       oneOf:
                       - type: string
                       - type: integer
                   type: object
                 type:
                   description: Type of deployment. Currently the only supported strategy
                     is "RollingUpdate". Default is RollingUpdate.
                   type: string
               type: object
             template:
               description: Template describes the machines that will be created.
               properties:
                 metadata:
                   description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                   type: object
                 spec:
                   description: 'Specification of the desired behavior of the machine.
                     More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                   properties:
                     configSource:
                       description: ConfigSource is used to populate in the associated
                         Node for dynamic kubelet config. This field already exists
                         in Node, so any updates to it in the Machine spec will be
                         automatically copied to the linked NodeRef from the status.
                         The rest of dynamic kubelet config support should then work
                         as-is.
                       type: object
                     metadata:
                       description: ObjectMeta will autopopulate the Node created.
                         Use this to indicate what labels, annotations, name prefix,
                         etc., should be used when creating the Node.
                       type: object
                     providerID:
                       description: ProviderID is the identification ID of the machine
                         provided by the provider. This field must match the provider
                         ID as seen on the node object corresponding to this machine.
                         This field is required by higher level consumers of cluster-api.
                         Example use case is cluster autoscaler with cluster-api as
                         provider. Clean-up login in the autoscaler compares machines
                         v/s nodes to find out machines at provider which could not
                         get registered as Kubernetes nodes. With cluster-api as a
                         generic out-of-tree provider for autoscaler, this field is
                         required by autoscaler to be able to have a provider view
                         of the list of machines. Another list of nodes is queries
                         from the k8s apiserver and then comparison is done to find
                         out unregistered machines and are marked for delete. This
                         field will be set by the actuators and consumed by higher
                         level entities like autoscaler  who will be interfacing with
                         cluster-api as generic provider.
                       type: string
                     providerSpec:
                       description: ProviderSpec details Provider-specific configuration
                         to use during node creation.
                       properties:
                         value:
                           description: Value is an inlined, serialized representation
                             of the resource configuration. It is recommended that
                             providers maintain their own versioned API types that
                             should be serialized/deserialized from this field, akin
                             to component config.
                           type: object
                         valueFrom:
                           description: Source for the provider configuration. Cannot
                             be used if value is not empty.
                           properties:
                             machineClass:
                               description: The machine class from which the provider
                                 config should be sourced.
                               properties:
                                 provider:
                                   description: Provider is the name of the cloud-provider
                                     which MachineClass is intended for.
                                   type: string
                               type: object
                           type: object
                       type: object
                     taints:
                       description: Taints is the full, authoritative list of taints
                         to apply to the corresponding Node. This list will overwrite
                         any modifications made to the Node on an ongoing basis.
                       items:
                         type: object
                       type: array
                     versions:
                       description: Versions of key software to use. This field is
                         optional at cluster creation time, and omitting the field
                         indicates that the cluster installation tool should select
                         defaults for the user. These defaults may differ based on
                         the cluster installer, but the tool should populate the values
                         it uses when persisting Machine objects. A Machine spec missing
                         this field at runtime is invalid.
                       properties:
                         controlPlane:
                           description: ControlPlane is the semantic version of the
                             Kubernetes control plane to run. This should only be populated
                             when the machine is a control plane.
                           type: string
                         kubelet:
                           description: Kubelet is the semantic version of kubelet
                             to run
                           type: string
                       required:
                       - kubelet
                       type: object
                   required:
                   - providerSpec
                   type: object
               type: object
           required:
           - selector
           - template
           type: object
         status:
           properties:
             availableReplicas:
               description: Total number of available machines (ready for at least
                 minReadySeconds) targeted by this deployment.
               format: int32
               type: integer
             observedGeneration:
               description: The generation observed by the deployment controller.
               format: int64
               type: integer
             readyReplicas:
               description: Total number of ready machines targeted by this deployment.
               format: int32
               type: integer
             replicas:
               description: Total number of non-terminated machines targeted by this
                 deployment (their labels match the selector).
               format: int32
               type: integer
             unavailableReplicas:
               description: Total number of unavailable machines targeted by this deployment.
                 This is the total number of machines that are still required for the
                 deployment to have 100% available capacity. They may either be machines
                 that are running but not yet available or machines that still have
                 not been created.
               format: int32
               type: integer
             updatedReplicas:
               description: Total number of non-terminated machines targeted by this
                 deployment that have the desired template spec.
               format: int32
               type: integer
           type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: machines.cluster.k8s.io
 spec:
   group: cluster.k8s.io
   names:
     kind: Machine
     plural: machines
   scope: Namespaced
   subresources:
     status: {}
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
             of an object. Servers should convert recognized schemas to the latest
             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
           type: string
         kind:
           description: 'Kind is a string value representing the REST resource this
             object represents. Servers may infer this from the endpoint the client
             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
         spec:
           properties:
             configSource:
               description: ConfigSource is used to populate in the associated Node
                 for dynamic kubelet config. This field already exists in Node, so
                 any updates to it in the Machine spec will be automatically copied
                 to the linked NodeRef from the status. The rest of dynamic kubelet
                 config support should then work as-is.
               type: object
             metadata:
               description: ObjectMeta will autopopulate the Node created. Use this
                 to indicate what labels, annotations, name prefix, etc., should be
                 used when creating the Node.
               type: object
             providerID:
               description: ProviderID is the identification ID of the machine provided
                 by the provider. This field must match the provider ID as seen on
                 the node object corresponding to this machine. This field is required
                 by higher level consumers of cluster-api. Example use case is cluster
                 autoscaler with cluster-api as provider. Clean-up login in the autoscaler
                 compares machines v/s nodes to find out machines at provider which
                 could not get registered as Kubernetes nodes. With cluster-api as
                 a generic out-of-tree provider for autoscaler, this field is required
                 by autoscaler to be able to have a provider view of the list of machines.
                 Another list of nodes is queries from the k8s apiserver and then comparison
                 is done to find out unregistered machines and are marked for delete.
                 This field will be set by the actuators and consumed by higher level
                 entities like autoscaler  who will be interfacing with cluster-api
                 as generic provider.
               type: string
             providerSpec:
               description: ProviderSpec details Provider-specific configuration to
                 use during node creation.
               properties:
                 value:
                   description: Value is an inlined, serialized representation of the
                     resource configuration. It is recommended that providers maintain
                     their own versioned API types that should be serialized/deserialized
                     from this field, akin to component config.
                   type: object
                 valueFrom:
                   description: Source for the provider configuration. Cannot be used
                     if value is not empty.
                   properties:
                     machineClass:
                       description: The machine class from which the provider config
                         should be sourced.
                       properties:
                         provider:
                           description: Provider is the name of the cloud-provider
                             which MachineClass is intended for.
                           type: string
                       type: object
                   type: object
               type: object
             taints:
               description: Taints is the full, authoritative list of taints to apply
                 to the corresponding Node. This list will overwrite any modifications
                 made to the Node on an ongoing basis.
               items:
                 type: object
               type: array
             versions:
               description: Versions of key software to use. This field is optional
                 at cluster creation time, and omitting the field indicates that the
                 cluster installation tool should select defaults for the user. These
                 defaults may differ based on the cluster installer, but the tool should
                 populate the values it uses when persisting Machine objects. A Machine
                 spec missing this field at runtime is invalid.
               properties:
                 controlPlane:
                   description: ControlPlane is the semantic version of the Kubernetes
                     control plane to run. This should only be populated when the machine
                     is a control plane.
                   type: string
                 kubelet:
                   description: Kubelet is the semantic version of kubelet to run
                   type: string
               required:
               - kubelet
               type: object
           required:
           - providerSpec
           type: object
         status:
           properties:
             addresses:
               description: Addresses is a list of addresses assigned to the machine.
                 Queried from cloud provider, if available.
               items:
                 type: object
               type: array
             conditions:
               description: 'Conditions lists the conditions synced from the node conditions
                 of the corresponding node-object. Machine-controller is responsible
                 for keeping conditions up-to-date. MachineSet controller will be taking
                 these conditions as a signal to decide if machine is healthy or needs
                 to be replaced. Refer: https://kubernetes.io/docs/concepts/architecture/nodes/#condition'
               items:
                 type: object
               type: array
             errorMessage:
               description: ErrorMessage will be set in the event that there is a terminal
                 problem reconciling the Machine and will contain a more verbose string
                 suitable for logging and human consumption.  This field should not
                 be set for transitive errors that a controller faces that are expected
                 to be fixed automatically over time (like service outages), but instead
                 indicate that something is fundamentally wrong with the Machine's
                 spec or the configuration of the controller, and that manual intervention
                 is required. Examples of terminal errors would be invalid combinations
                 of settings in the spec, values that are unsupported by the controller,
                 or the responsible controller itself being critically misconfigured.  Any
                 transient errors that occur during the reconciliation of Machines
                 can be added as events to the Machine object and/or logged in the
                 controller's output.
               type: string
             errorReason:
               description: ErrorReason will be set in the event that there is a terminal
                 problem reconciling the Machine and will contain a succinct value
                 suitable for machine interpretation.  This field should not be set
                 for transitive errors that a controller faces that are expected to
                 be fixed automatically over time (like service outages), but instead
                 indicate that something is fundamentally wrong with the Machine's
                 spec or the configuration of the controller, and that manual intervention
                 is required. Examples of terminal errors would be invalid combinations
                 of settings in the spec, values that are unsupported by the controller,
                 or the responsible controller itself being critically misconfigured.  Any
                 transient errors that occur during the reconciliation of Machines
                 can be added as events to the Machine object and/or logged in the
                 controller's output.
               type: string
             lastOperation:
               description: LastOperation describes the last-operation performed by
                 the machine-controller. This API should be useful as a history in
                 terms of the latest operation performed on the specific machine. It
                 should also convey the state of the latest-operation for example if
                 it is still on-going, failed or completed successfully.
               properties:
                 description:
                   description: Description is the human-readable description of the
                     last operation.
                   type: string
                 lastUpdated:
                   description: LastUpdated is the timestamp at which LastOperation
                     API was last-updated.
                   format: date-time
                   type: string
                 state:
                   description: State is the current status of the last performed operation.
                     E.g. Processing, Failed, Successful etc
                   type: string
                 type:
                   description: Type is the type of operation which was last performed.
                     E.g. Create, Delete, Update etc
                   type: string
               type: object
             lastUpdated:
               description: LastUpdated identifies when this status was last observed.
               format: date-time
               type: string
             nodeRef:
               description: NodeRef will point to the corresponding Node if it exists.
               type: object
             phase:
               description: Phase represents the current phase of machine actuation.
                 E.g. Pending, Running, Terminating, Failed etc.
               type: string
             providerStatus:
               description: ProviderStatus details a Provider-specific status. It is
                 recommended that providers maintain their own versioned API types
                 that should be serialized/deserialized from this field.
               type: object
             versions:
               description: 'Versions specifies the current versions of software on
                 the corresponding Node (if it exists). This is provided for a few
                 reasons:  1) It is more convenient than checking the NodeRef, traversing
                 it to    the Node, and finding the appropriate field in Node.Status.NodeInfo    (which
                 uses different field names and formatting). 2) It removes some of
                 the dependency on the structure of the Node,    so that if the structure
                 of Node.Status.NodeInfo changes, only    machine controllers need
                 to be updated, rather than every client    of the Machines API. 3)
                 There is no other simple way to check the control plane    version.
                 A client would have to connect directly to the apiserver    running
                 on the target node in order to find out its version.'
               properties:
                 controlPlane:
                   description: ControlPlane is the semantic version of the Kubernetes
                     control plane to run. This should only be populated when the machine
                     is a control plane.
                   type: string
                 kubelet:
                   description: Kubelet is the semantic version of kubelet to run
                   type: string
               required:
               - kubelet
               type: object
           type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: apiextensions.k8s.io/v1beta1
 kind: CustomResourceDefinition
 metadata:
   creationTimestamp: null
   labels:
     controller-tools.k8s.io: "1.0"
   name: machinesets.cluster.k8s.io
 spec:
   group: cluster.k8s.io
   names:
     kind: MachineSet
     plural: machinesets
   scope: Namespaced
   subresources:
     scale:
       labelSelectorPath: .status.labelSelector
       specReplicasPath: .spec.replicas
       statusReplicasPath: .status.replicas
     status: {}
   validation:
     openAPIV3Schema:
       properties:
         apiVersion:
           description: 'APIVersion defines the versioned schema of this representation
             of an object. Servers should convert recognized schemas to the latest
             internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
           type: string
         kind:
           description: 'Kind is a string value representing the REST resource this
             object represents. Servers may infer this from the endpoint the client
             submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
           type: string
         metadata:
           type: object
         spec:
           properties:
             minReadySeconds:
               description: MinReadySeconds is the minimum number of seconds for which
                 a newly created machine should be ready. Defaults to 0 (machine will
                 be considered available as soon as it is ready)
               format: int32
               type: integer
             replicas:
               description: Replicas is the number of desired replicas. This is a pointer
                 to distinguish between explicit zero and unspecified. Defaults to
                 1.
               format: int32
               type: integer
             selector:
               description: 'Selector is a label query over machines that should match
                 the replica count. Label keys and values that must match in order
                 to be controlled by this MachineSet. It must match the machine template''s
                 labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
               type: object
             template:
               description: Template is the object that describes the machine that
                 will be created if insufficient replicas are detected.
               properties:
                 metadata:
                   description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                   type: object
                 spec:
                   description: 'Specification of the desired behavior of the machine.
                     More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                   properties:
                     configSource:
                       description: ConfigSource is used to populate in the associated
                         Node for dynamic kubelet config. This field already exists
                         in Node, so any updates to it in the Machine spec will be
                         automatically copied to the linked NodeRef from the status.
                         The rest of dynamic kubelet config support should then work
                         as-is.
                       type: object
                     metadata:
                       description: ObjectMeta will autopopulate the Node created.
                         Use this to indicate what labels, annotations, name prefix,
                         etc., should be used when creating the Node.
                       type: object
                     providerID:
                       description: ProviderID is the identification ID of the machine
                         provided by the provider. This field must match the provider
                         ID as seen on the node object corresponding to this machine.
                         This field is required by higher level consumers of cluster-api.
                         Example use case is cluster autoscaler with cluster-api as
                         provider. Clean-up login in the autoscaler compares machines
                         v/s nodes to find out machines at provider which could not
                         get registered as Kubernetes nodes. With cluster-api as a
                         generic out-of-tree provider for autoscaler, this field is
                         required by autoscaler to be able to have a provider view
                         of the list of machines. Another list of nodes is queries
                         from the k8s apiserver and then comparison is done to find
                         out unregistered machines and are marked for delete. This
                         field will be set by the actuators and consumed by higher
                         level entities like autoscaler  who will be interfacing with
                         cluster-api as generic provider.
                       type: string
                     providerSpec:
                       description: ProviderSpec details Provider-specific configuration
                         to use during node creation.
                       properties:
                         value:
                           description: Value is an inlined, serialized representation
                             of the resource configuration. It is recommended that
                             providers maintain their own versioned API types that
                             should be serialized/deserialized from this field, akin
                             to component config.
                           type: object
                         valueFrom:
                           description: Source for the provider configuration. Cannot
                             be used if value is not empty.
                           properties:
                             machineClass:
                               description: The machine class from which the provider
                                 config should be sourced.
                               properties:
                                 provider:
                                   description: Provider is the name of the cloud-provider
                                     which MachineClass is intended for.
                                   type: string
                               type: object
                           type: object
                       type: object
                     taints:
                       description: Taints is the full, authoritative list of taints
                         to apply to the corresponding Node. This list will overwrite
                         any modifications made to the Node on an ongoing basis.
                       items:
                         type: object
                       type: array
                     versions:
                       description: Versions of key software to use. This field is
                         optional at cluster creation time, and omitting the field
                         indicates that the cluster installation tool should select
                         defaults for the user. These defaults may differ based on
                         the cluster installer, but the tool should populate the values
                         it uses when persisting Machine objects. A Machine spec missing
                         this field at runtime is invalid.
                       properties:
                         controlPlane:
                           description: ControlPlane is the semantic version of the
                             Kubernetes control plane to run. This should only be populated
                             when the machine is a control plane.
                           type: string
                         kubelet:
                           description: Kubelet is the semantic version of kubelet
                             to run
                           type: string
                       required:
                       - kubelet
                       type: object
                   required:
                   - providerSpec
                   type: object
               type: object
           required:
           - selector
           type: object
         status:
           properties:
             availableReplicas:
               description: The number of available replicas (ready for at least minReadySeconds)
                 for this MachineSet.
               format: int32
               type: integer
             errorMessage:
               type: string
             errorReason:
               description: In the event that there is a terminal problem reconciling
                 the replicas, both ErrorReason and ErrorMessage will be set. ErrorReason
                 will be populated with a succinct value suitable for machine interpretation,
                 while ErrorMessage will contain a more verbose string suitable for
                 logging and human consumption.  These fields should not be set for
                 transitive errors that a controller faces that are expected to be
                 fixed automatically over time (like service outages), but instead
                 indicate that something is fundamentally wrong with the MachineTemplate's
                 spec or the configuration of the machine controller, and that manual
                 intervention is required. Examples of terminal errors would be invalid
                 combinations of settings in the spec, values that are unsupported
                 by the machine controller, or the responsible machine controller itself
                 being critically misconfigured.  Any transient errors that occur during
                 the reconciliation of Machines can be added as events to the MachineSet
                 object and/or logged in the controller's output.
               type: string
             fullyLabeledReplicas:
               description: The number of replicas that have labels matching the labels
                 of the machine template of the MachineSet.
               format: int32
               type: integer
             observedGeneration:
               description: ObservedGeneration reflects the generation of the most
                 recently observed MachineSet.
               format: int64
               type: integer
             readyReplicas:
               description: The number of ready replicas for this MachineSet. A machine
                 is considered ready when the node has been created and is "Ready".
               format: int32
               type: integer
             replicas:
               description: Replicas is the most recently observed number of replicas.
               format: int32
               type: integer
           required:
           - replicas
           type: object
   version: v1alpha1
 status:
   acceptedNames:
     kind: ""
     plural: ""
   conditions: []
   storedVersions: []
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRole
 metadata:
   creationTimestamp: null
   name: cluster-api-manager-role
 rules:
 - apiGroups:
   - cluster.k8s.io
   resources:
   - clusters
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - ""
   resources:
   - events
   verbs:
   - get
   - list
   - watch
   - create
 - apiGroups:
   - cluster.k8s.io
   resources:
   - machines
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - cluster.k8s.io
   resources:
   - machinedeployments
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - cluster.k8s.io
   resources:
   - machinesets
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - cluster.k8s.io
   resources:
   - machines
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - ""
   resources:
   - nodes
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 - apiGroups:
   - cluster.k8s.io
   resources:
   - machines
   - machines/status
   verbs:
   - get
   - list
   - watch
   - create
   - update
   - patch
   - delete
 ---
 apiVersion: rbac.authorization.k8s.io/v1
 kind: ClusterRoleBinding
 metadata:
   creationTimestamp: null
   name: cluster-api-manager-rolebinding
 roleRef:
   apiGroup: rbac.authorization.k8s.io
   kind: ClusterRole
   name: cluster-api-manager-role
 subjects:
 - kind: ServiceAccount
   name: default
   namespace: cluster-api-system
 ---
 apiVersion: v1
 kind: Service
 metadata:
   labels:
     control-plane: controller-manager
     controller-tools.k8s.io: "1.0"
   name: cluster-api-controller-manager-service
   namespace: cluster-api-system
 spec:
   ports:
   - port: 443
   selector:
     control-plane: controller-manager
     controller-tools.k8s.io: "1.0"
 ---
 apiVersion: apps/v1
 kind: StatefulSet
 metadata:
   labels:
     control-plane: controller-manager
     controller-tools.k8s.io: "1.0"
   name: cluster-api-controller-manager
   namespace: cluster-api-system
 spec:
   selector:
     matchLabels:
       control-plane: controller-manager
       controller-tools.k8s.io: "1.0"
   serviceName: cluster-api-controller-manager-service
   template:
     metadata:
       labels:
         control-plane: controller-manager
         controller-tools.k8s.io: "1.0"
     spec:
       containers:
       - command:
         - /manager
         image: gcr.io/k8s-cluster-api/cluster-api-controller:latest
         name: manager
         resources:
           limits:
             cpu: 100m
             memory: 30Mi
           requests:
             cpu: 100m
             memory: 20Mi
       terminationGracePeriodSeconds: 10
       tolerations:
       - effect: NoSchedule
         key: node-role.kubernetes.io/master
       - key: CriticalAddonsOnly
         operator: Exists
       - effect: NoExecute
         key: node.alpha.kubernetes.io/notReady
         operator: Exists
       - effect: NoExecute
         key: node.alpha.kubernetes.io/unreachable
         operator: Exists
 #+END_EXAMPLE
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Prepare working directory
#+BEGIN_SRC sh
mkdir ~/cluster-api
#+END_SRC
** start test env with vagrant
#+BEGIN_SRC sh
vagrant init hashicorp-vagrant/ubuntu-16.04
vagrant up -d

vagrant ssh
sudo su -
#+END_SRC

https://gist.github.com/Adron/4e1e7d0f71da7c415f455d5930ea94c9
** HALF change vagrant vm to 4 cpu cores
** Install packages
#+BEGIN_SRC sh
apt-get update -y

apt-get install -y git docker.io
#+END_SRC
** Install go version, and confirm golang version is 1.11.1
https://github.com/minio/cookbook/blob/master/docs/how-to-install-golang.md

#+BEGIN_SRC sh
go version
#+END_SRC
** get the code
#+BEGIN_SRC sh
go get sigs.k8s.io/cluster-api-provider-vsphere
export GOPATH=/root/cluster-api-provider-vsphere
export PATH=$PATH:$GOPATH/bin
#+END_SRC
** install kustomize
https://github.com/kubernetes-sigs/kustomize/blob/master/docs/INSTALL.md
#+BEGIN_SRC sh
go get sigs.k8s.io/kustomize
kustomize version # 2.0.3
#+END_SRC
** Install kubebuild
#+BEGIN_SRC sh
cd /root/

version=1.0.8 # latest stable version
arch=amd64

 # download the release
 curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_linux_${arch}.tar.gz"

 # extract the archive
 tar -zxvf kubebuilder_${version}_linux_${arch}.tar.gz
 mv kubebuilder_${version}_linux_${arch} kubebuilder && sudo mv kubebuilder /usr/local/

 # update your PATH to include /usr/local/kubebuilder/bin
 export PATH=$PATH:/usr/local/kubebuilder/bin

kubebuilder version
#+END_SRC
** prepare env
#+BEGIN_SRC sh
cd /root

vim /root/.bashrc

export GOPATH=/root/cluster-api-provider-vsphere
export PATH=$PATH:$GOPATH/bin

source /root/.bashrc
#+END_SRC
** build docker image
#+BEGIN_SRC sh
cd $GOPATH
cd /root/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere

DEV_IMG=denny/vsphere-cluster-api-provider:trial make dev-build

docker push denny/vsphere-cluster-api-provider:trial
#+END_SRC
** install kubectl
#+BEGIN_SRC sh
sudo apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubectl
#+END_SRC
** Install kind
#+BEGIN_SRC sh
go get sigs.k8s.io/kind
#+END_SRC
** build clusterctl
#+BEGIN_SRC sh
go get sigs.k8s.io/cluster-api-provider-vsphere
cd $GOPATH/src/sigs.k8s.io/cluster-api-provider-vsphere/cmd/clusterctl
go build && go install

which clusterctl
clusterctl --help
#+END_SRC
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** TODO enable DRS, then change the resource pool
** Install govc
#+BEGIN_SRC sh
curl -L https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz | gunzip > /usr/local/bin/govc
chmod +x /usr/local/bin/govc
govc version
#+END_SRC
** govc import
https://10.160.101.10/

#+BEGIN_SRC sh
GOVC_INSECURE=1 GOVC_URL='administrator@vsphere.local:Admin!23@10.160.101.10' govc import.ova --options=/root/tmp/ubuntu-16.04.json -ds=nfs0-1 /root/tmp/ubuntu-16.04-server-cloudimg-amd64.ova
#+END_SRC
** Prepare yaml files
#+BEGIN_SRC sh
cd ./out
#+END_SRC

#+BEGIN_EXAMPLE
root@vagrant:~/tmp/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere/out# ls -lth
total 84K
-rw-r--r-- 1 root root 1.1K Mar 28 01:23 machineset.yaml
-rw-r----- 1 root root 5.4K Mar 28 01:23 kubeconfig
-rw-r--r-- 1 root root  57K Mar 28 01:10 provider-components.yaml
-rw-r--r-- 1 root root 1.2K Mar 28 00:58 machines.yaml
-rw-r--r-- 1 root root  522 Mar 28 00:55 cluster.yaml
-rw-r--r-- 1 root root  216 Mar 28 00:53 addons.yaml
#+END_EXAMPLE
** Run clusterctl to create cluster
#+BEGIN_SRC sh
cd /root/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere/out

clusterctl create cluster --provider vsphere \
   --bootstrap-type kind -c cluster.yaml -m machines.yaml -p provider-components.yaml
#+END_SRC
** consume kubectl
#+BEGIN_SRC sh
kubectl --kubeconfig=kubeconfig run my-nginx --image=nginx --replicas=2 --port=80

kubectl --kubeconfig=kubeconfig get node -o wide
kubectl --kubeconfig=kubeconfig get pod -o wide
#+END_SRC
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Fail to create cluster                                      :noexport:
#+BEGIN_EXAMPLE

root@vagrant:~/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere/out# clusterctl create cluster --provider vsphere --bootstrap-type kind -c cluster.yaml -m machines.yaml -p provider-components.yaml
I0404 21:30:50.648853   16400 createbootstrapcluster.go:27] Creating bootstrap cluster
I0404 21:31:36.308956   16400 clusterdeployer.go:79] Applying Cluster API stack to bootstrap cluster
I0404 21:31:36.310396   16400 applyclusterapicomponents.go:26] Applying Cluster API Provider Components
I0404 21:31:37.089514   16400 clusterdeployer.go:84] Provisioning target cluster via bootstrap cluster
I0404 21:31:37.115407   16400 applycluster.go:36] Creating cluster object k8s-cluster-api in namespace "default"
I0404 21:31:37.128445   16400 clusterdeployer.go:93] Creating control plane  in namespace "default"
I0404 21:31:37.139001   16400 applymachines.go:36] Creating machines in namespace "default"
I0404 21:35:57.190445   16400 clusterdeployer.go:98] Updating bootstrap cluster object for cluster k8s-cluster-api in namespace "default" with control plane endpoint running on
I0404 21:35:57.255048   16400 clusterdeployer.go:103] Creating target cluster
I0404 21:35:57.262214   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:35:58.322250   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:08.323697   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:09.405686   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:18.323533   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:19.367362   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:28.323041   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:29.325207   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:38.323622   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:39.473587   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:48.324052   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:49.343994   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:36:58.326865   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:36:59.442926   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:37:08.323039   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:37:09.405708   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:37:18.325594   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
cat: /etc/kubernetes/admin.conf: No such file or directory
I0404 21:37:19.364994   16400 utils.go:183] ssh failed with error = exit status 1
I0404 21:37:28.323041   16400 utils.go:170] pulling kubeconfig (using ssh) from 10.160.112.255
sudo: unable to resolve host k8s-cluster-api-master-r276h
I0404 21:37:29.362818   16400 utils.go:187] ssh pulled kubeconfig
I0404 21:37:29.415330   16400 clusterdeployer.go:121] Creating namespace "default" on target cluster
I0404 21:40:25.201806   16400 createbootstrapcluster.go:36] Cleaning up bootstrap cluster.
F0404 21:40:28.343783   16400 create_cluster.go:61] unable to ensure namespace "default" in target cluster: timed out waiting for the condition
#+END_EXAMPLE
* TODO cluster api: get verbose log                                :noexport:
* TODO kubectl apply -f ./machines.yaml                            :noexport:
root@vagrant:~/cluster-api-provider-vsphere/src/sigs.k8s.io/cluster-api-provider-vsphere/out# kubectl apply -f ./machines.yaml
error: resource name may not be empty
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO cluster api: certificate issue                              :noexport:
* TODO kind vs minikube                                            :noexport:
https://github.com/kubernetes-sigs/cluster-api-provider-vsphere/blob/master/docs/self-service/README.md

#+BEGIN_EXAMPLE
Decide on whether to use minikube or kind as your bootstrapper

In the self-service workflow, clusterctl will create a bootstrap
cluster to kick off the process. You have two options for
bootstrappers: minikube or kind. Kind is a relatively new project that
starts a cluster within Docker on your local machine. This removes the
need to have a desktop hypervisor installed on your local machine. If
you intend to use the kind bootstrapper, you may skip the next section
on Fusion and minikube.
#+END_EXAMPLE
* TODO kubeadm                                                     :noexport:
#+BEGIN_EXAMPLE
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Failed to connect to API Server "10.160.104.248:443": token id "p3pa9l" is invalid for this cluster or it has expired. Use "kubeadm token create" on the master node to creating a new valid token
[discovery] abort connecting to API servers after timeout of 5m0s
#+END_EXAMPLE

#+BEGIN_EXAMPLE
root@k8s-cluster-api-machineset-jt4pp:/var/log# kubeadm join --token 1wude6.w1xvwvtyzjfd4s6b 10.160.104.248:443 --ignore-preflight-errors=all --discovery-token-unsafe-skip-ca-verification
[preflight] Running pre-flight checks
	[WARNING Hostname]: hostname "k8s-cluster-api-machineset-jt4pp" could not be reached
	[WARNING Hostname]: hostname "k8s-cluster-api-machineset-jt4pp": lookup k8s-cluster-api-machineset-jt4pp on 10.162.204.1:53: no such host
[discovery] Trying to connect to API Server "10.160.104.248:443"
[discovery] Created cluster-info discovery client, requesting info from "https://10.160.104.248:443"
[discovery] Cluster info signature and contents are valid and no TLS pinning was specified, will use API Server "10.160.104.248:443"
[discovery] Successfully established connection with API Server "10.160.104.248:443"
[join] Reading configuration from the cluster...
[join] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
[kubelet] Downloading configuration for the kubelet from the "kubelet-config-1.13" ConfigMap in the kube-system namespace
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Activating the kubelet service
[tlsbootstrap] Waiting for the kubelet to perform the TLS Bootstrap...
[patchnode] Uploading the CRI Socket information "/var/run/dockershim.sock" to the Node API object "k8s-cluster-api-machineset-jt4pp" as an annotation

This node has joined the cluster:
 * Certificate signing request was sent to apiserver and a response was received.
 * The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the master to see this node join the cluster.
#+END_EXAMPLE

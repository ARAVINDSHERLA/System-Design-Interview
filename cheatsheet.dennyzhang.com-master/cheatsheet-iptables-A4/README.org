* CheatSheet: Iptables                                                :Linux:
:PROPERTIES:
:type:     tool, linux, security
:export_file_name: cheatsheet-iptables-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-iptables-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-iptables-A4/cheatsheet-iptables-A4.pdf][cheatsheet-iptables-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/linux/][linux]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-iptables-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-shell-A4][CheatSheet: shell]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].
** Iptables
| Name                                          | Command                            |
|-----------------------------------------------+------------------------------------|
| Show all rules                                | =iptables -L INPUT --line-numbers= |
| [[https://my.esecuredata.com/index.php?/knowledgebase/article/49/how-to-redirect-an-incoming-connection-to-a-different-ip-address-on-a-specific-port-using-iptables/][Redirect TCP traffic to another remote server]] | Change PREROUTING and POSTROUTING  |

** More Resources
License: Code is liceniptables under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].

https://github.com/trimstray/iptables-essentials

#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION: 
#+KEYWORDS: 
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-iptables-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-iptables-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-iptables-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-iptables-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:   
#+LINK_HOME: 
* misc                                                             :noexport:
# Show hit for rules with auto refresh
watch --interval 0 'iptables -nvL | grep -v "0     0"'

# Show hit for rule with auto refresh and highlight any changes since the last refresh
watch -d -n 2 iptables -nvL

# Block the port 902 and we hide this port from nmap.
iptables -A INPUT -i eth0 -p tcp --dport 902 -j REJECT --reject-with icmp-port-unreachable

# Note, --reject-with accept:
#	icmp-net-unreachable
#	icmp-host-unreachable
#	icmp-port-unreachable <- Hide a port to nmap
#	icmp-proto-unreachable
#	icmp-net-prohibited
#	icmp-host-prohibited or
#	icmp-admin-prohibited
#	tcp-reset

# Add a comment to a rule:
iptables ... -m comment --comment "This rule is here for this reason"

# To remove or insert a rule:
# 1) Show all rules
iptables -L INPUT --line-numbers
# OR iptables -nL --line-numbers

# Chain INPUT (policy ACCEPT)
#     num  target prot opt source destination
#     1    ACCEPT     udp  --  anywhere  anywhere             udp dpt:domain
#     2    ACCEPT     tcp  --  anywhere  anywhere             tcp dpt:domain
#     3    ACCEPT     udp  --  anywhere  anywhere             udp dpt:bootps
#     4    ACCEPT     tcp  --  anywhere  anywhere             tcp dpt:bootps

# 2.a) REMOVE (-D) a rule. (here an INPUT rule)
iptables -D INPUT 2

# 2.b) OR INSERT a rule.
iptables -I INPUT {LINE_NUMBER} -i eth1 -p tcp --dport 21 -s 123.123.123.123 -j ACCEPT -m comment --comment "This rule is here for this reason"
* airgap rules                                                     :noexport:
#+BEGIN_EXAMPLE
#!/bin/bash

# flush rules in INPUT chain
sudo iptables -F INPUT
# flush rules in OUTPUT chain
sudo iptables -F OUTPUT
# set default policy in INPUT chain to DROP
sudo iptables -P INPUT DROP
# set default policy in OUTPUT chain to DROP
sudo iptables -P OUTPUT DROP

# flush rules in FORWARD chain
sudo iptables -F FORWARD
sudo iptables -P FORWARD DROP

# flush rules in table nat PREROUTING chain
sudo iptables -t nat -F PREROUTING
# flush rules in table nat POSTROUTING chain
sudo iptables -t nat -F POSTROUTING

# eth0 is for vm network which means public access here
# eth1 is for priviate management network, eg: nsx-t manager, controller, vc etc
# vlan0101 is for nsx-t virtual network
vm_network_interface="eth0"
manager_networker_interface="eth1"
nsx_t_virtual_network_interface="vlan0101"

# enables traffic from/to private network for local processes on eth0
sudo iptables -A INPUT -i "$vm_network_interface" -s 10.0.0.0/8 -j ACCEPT
sudo iptables -A INPUT -i "$vm_network_interface" -s 169.254.0.0/16 -j ACCEPT
sudo iptables -A INPUT -i "$vm_network_interface" -s 172.16.0.0/12 -j ACCEPT
sudo iptables -A INPUT -i "$vm_network_interface" -s 192.168.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$vm_network_interface" -d 10.0.0.0/8 -j ACCEPT
sudo iptables -A OUTPUT -o "$vm_network_interface" -d 169.254.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$vm_network_interface" -d 172.16.0.0/12 -j ACCEPT
sudo iptables -A OUTPUT -o "$vm_network_interface" -d 192.168.0.0/16 -j ACCEPT

# enables traffic between nsx-t provisioned networks and local
sudo iptables -A INPUT -i "$nsx_t_virtual_network_interface" -s 192.168.0.0/16 -j ACCEPT
sudo iptables -A INPUT -i "$nsx_t_virtual_network_interface" -s 192.167.0.0/16 -j ACCEPT
sudo iptables -A INPUT -i "$nsx_t_virtual_network_interface" -s 30.0.0.0/16 -j ACCEPT
sudo iptables -A INPUT -i "$nsx_t_virtual_network_interface" -s 40.0.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$nsx_t_virtual_network_interface" -d 192.168.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$nsx_t_virtual_network_interface" -d 192.167.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$nsx_t_virtual_network_interface" -d 30.0.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$nsx_t_virtual_network_interface" -d 40.0.0.0/16 -j ACCEPT

# enables traffic between private vm management network and local
sudo iptables -A INPUT -i "$manager_networker_interface" -s 192.168.0.0/16 -j ACCEPT
sudo iptables -A OUTPUT -o "$manager_networker_interface" -d 192.168.0.0/16 -j ACCEPT

# enables traffic between nsx-t network to outside private network
iptables -t nat -A POSTROUTING -o "$vm_network_interface" -j MASQUERADE
sudo iptables -A FORWARD -i "$vm_network_interface" -o "$nsx_t_virtual_network_interface" -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i "$nsx_t_virtual_network_interface" -o "$vm_network_interface" -d 10.0.0.0/8 -j ACCEPT
sudo iptables -A FORWARD -i "$nsx_t_virtual_network_interface" -o "$vm_network_interface" -d 169.254.0.0/16 -j ACCEPT
sudo iptables -A FORWARD -i "$nsx_t_virtual_network_interface" -o "$vm_network_interface" -d 172.16.0.0/12 -j ACCEPT
sudo iptables -A FORWARD -i "$nsx_t_virtual_network_interface" -o "$vm_network_interface" -d 192.168.0.0/16 -j ACCEPT

# enables any traffic between nsx-t network and private vm management network
iptables -t nat -A POSTROUTING -o "$manager_networker_interface" -j MASQUERADE
sudo iptables -A FORWARD -i "$manager_networker_interface" -o "$nsx_t_virtual_network_interface" -j ACCEPT
sudo iptables -A FORWARD -i "$nsx_t_virtual_network_interface" -o "$manager_networker_interface" -j ACCEPT
#+END_EXAMPLE

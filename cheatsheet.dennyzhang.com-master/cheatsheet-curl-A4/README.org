* CheatSheet: Curl & Wget                                             :Tools:
:PROPERTIES:
:type:     tool
:export_file_name: cheatsheet-curl-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-curl-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-curl-A4/cheatsheet-curl-A4.pdf][cheatsheet-curl-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/tools/][Tools]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-curl-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-shell-A4][CheatSheet: shell]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].

** Curl Get/Head
| Name                           | Command                                                               |
|--------------------------------+-----------------------------------------------------------------------|
| Curl head request              | =curl -I https://www.google.com=                                      |
| Curl head request with verbose | =curl -v -I https://www.google.com=                                   |
| Curl with explicit http method | =curl -X GET https://www.google.com=                                  |
| Curl without http proxy        | =curl --noproxy 127.0.0.1 http://www.stackoverflow.com=               |
| Curl has no timeout by default | =curl --connect-timeout 10 -I -k https://www.google.com=              |
| [[https://stackoverflow.com/questions/356705/how-to-send-a-header-using-a-http-request-through-a-curl-call][Curl get with extra headers]]    | =curl --verbose --header "Host: www.mytest.com:8182" www.google.com=  |
| Curl get response with headers | =curl -k -v https://www.google.com=                                   |
| [[https://stackoverflow.com/questions/51579063/curl-https-via-an-ssh-proxy][curl with ssh proxy]]            | Setup ssh tunnel, then =curl -x socks5h://0:8080 https://example.com= |

** Curl POST
| Name                | Command                                                                     |
|---------------------+-----------------------------------------------------------------------------|
| Curl post request   | =curl -d "name=username&password=123456" <URL>=                             |
| Curl post send json | =curl <URL> -H "content-type: application/json" -d "{ \"woof\": \"bark\"}"= |

** Curl Advanced
| Name                         |
|------------------------------|
| Get my public ip             |
| Curl with credential         |
| Curl upload                  |
| Install curl in alpine linux |
| Curl with http2              |
| Curl ftp upload              |
| Curl ftp download            |
| Curl upload with credential  |
** Curl Script
| Name                                   | Command                 |
|----------------------------------------+-------------------------|
| Install packages with curl             | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-curl-A4/curl-install-package.sh][curl-install-package.sh]] |
| Check a website response time          | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-curl-A4/curl-url-time.sh][curl-url-time.sh]]        |
| Beautify json output for curl response | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-curl-A4/curl-format-json.sh][curl-format-json.sh]]     |
| Curl run remote scripts                | [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-curl-A4/curl-remote-scripts.sh][curl-remote-scripts.sh]]  |
** Wget
| Name                    | Command                                       |
|-------------------------+-----------------------------------------------|
| Download one url        | =wget -O /tmp/google.html https://google.com= |
| Download mutiple urls   | =wget https://google.com https://bing.com=    |
| Download a list of urls | =wget -i url-list.txt=, [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-networking-A4/url-list.txt][url-list.txt]]          |

** More Resources
License: Code is licencurl under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].

http://curl.haxx.se

#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION: 
#+KEYWORDS: 
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-curl-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-curl-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-curl-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-curl-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:   
#+LINK_HOME: 
* [#A] curl                                              :noexport:IMPORTANT:
| Item                       | Comment                                                                                              |
|----------------------------+------------------------------------------------------------------------------------------------------|
| curl既拿到http头又拿到body | curl -D ./tt www.baidu.com; cat ./tt; rm -rf ./tt                                                    |
| curl发送post时,得到http头 | curl -D test -d "token=shell_token&data=crontabs_generatord ping" http://127.0.0.1:9110/shell        |
| curl set header            | curl -H "text/xml" --data-urlencode "<XmlContainer xmlns='sads'..." http://myapiurl.com/service.svc/ |
** basic use
#+begin_example
curl is a command line tool for transferring files with URL syntax,
supporting FTP, FTPS, HTTP, HTTPS, SCP, SFTP, TFTP, TELNET, DICT,
LDAP, LDAPS and FILE. curl supports SSL certificates, HTTP POST, HTTP
PUT, FTP uploading, HTTP form based upload, proxies, cookies,
user+password authentication (Basic, Digest, NTLM, Negotiate,
kerberos...), file transfer resume, proxy tunneling and a busload of
other useful tricks.
#+end_example
** useful link
 http://curl.haxx.se/docs/manual.html\\
 Manual -- curl usage explained
 http://curl.haxx.se/\\
 curl
http://superuser.com/questions/149329/how-do-i-make-a-post-request-with-the-curl-command-line-tool\\

http://curl.haxx.se/docs/httpscripting.html\\
http://beerpla.net/2010/06/10/how-to-display-just-the-http-response-code-in-cli-curl/\\
How To Display Just The HTTP Response Code In Command Line Curl

* TODO [#A] Blog: Shell Scripts Error handling when running curl REST calls
dennyzhang [2:27 PM]
I'm using shell script to write some DB migration logic.

It will involve multiple curl requests.

I want to quite the following procedure if anything goes wrong with current curl request.

Any tips how to enforce this in a clean way?

get date

curl XXX | tee -a XXX.log

tail -n AAA | grep "error mssage"
** don't use bash
* TODO cheatsheet: curl                                            :noexport:
# Download a single file
curl http://path.to.the/file

# Download a file and specify a new filename
curl http://example.com/file.zip -o new_file.zip

# Download multiple files
curl -O URLOfFirstFile -O URLOfSecondFile

# Download all sequentially numbered files (1-24)
curl http://example.com/pic[1-24].jpg

# Download a file and pass HTTP Authentication
curl -u username:password URL 

# Download a file with a Proxy
curl -x proxysever.server.com:PORT http://addressiwantto.access

# Download a file from FTP
curl -u username:password -O ftp://example.com/pub/file.zip

# Get an FTP directory listing
curl ftp://username:password@example.com

# Resume a previously failed download
curl -C - -o partial_file.zip http://example.com/file.zip

# Fetch only the HTTP headers from a response
curl -I http://example.com

# Fetch your external IP and network info as JSON
curl http://ifconfig.me/all/json

# Limit the rate of a download
curl --limit-rate 1000B -O http://path.to.the/file

# Get your global IP
curl httpbin.org/ip 

# Get only the HTTP status code
curl -o /dev/null -w '%{http_code}\n' -s -I URL
* TODO curl cheatsheet: https://jimmysong.io/cheatsheets/curl      :noexport:
* wget                                                         :noexport:
# To download a single file
wget http://path.to.the/file

# To continue an aborted downloaded
wget -c http://path.to.the/file

# To mirror a whole page locally
wget -pk http://path.to.the/page.html

# To mirror a whole site locally
wget -mk http://site.tl/

# To download files according to a pattern
wget http://www.myserver.com/files-{1..15}.tar.bz2

# To download all the files in a directory with a specific extension if directory indexing is enabled
wget -r -l1 -A.extension http://myserver.com/directory

# Allows you to download just the headers of responses (-S --spider) and display them on Stdout (-O -).
wget -S --spider -O - http://google.com

# Change the User-Agent to 'User-Agent: toto'
wget -U 'toto' http://google.com

** wget -qO- https://get.docker.com/ | sh                          :noexport:

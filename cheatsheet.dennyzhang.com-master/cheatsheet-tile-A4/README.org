* CheatSheet: Cloudfoundry Tile & OpsManager                          :VMware:
:PROPERTIES:
:type:     pivotal, pks, vmware
:export_file_name: cheatsheet-tile-A4.pdf
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-tile-A4"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

- PDF Link: [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/blob/master/cheatsheet-tile-A4/cheatsheet-tile-A4.pdf][cheatsheet-tile-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/vmware/][vmware]]
- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4
- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-pks-A4][PKS CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4][Bosh CheatSheet]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]

File me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].
** om - Basic
| Name                                  | Command                                                                                                           |
|---------------------------------------+-------------------------------------------------------------------------------------------------------------------|
| [[https://github.com/pivotal-cf/om][om]]                                    | A command-line API client for Pivotal Operations Manager                                                          |
| Download PCF vsphpere Opsmanager OVA  | https://network.pivotal.io/products/ops-manager                                                                   |
| omcli                                 | export passwd='CHANGEME'; alias omcli="om -t https://30.0.0.5 -u admin -p $password -k"                           |
| Get uaa admin password                | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.uaa_admin_password=           |
| Get bosh connect credential           | =omcli curl -p /api/v0/deployed/director/credentials/bosh_commandline_credentials=                                |
| List all installed tiles              | =omcli curl -p /api/v0/installations=                                                                             |
| Upload tile to opsmanager via cli     | =omcli upload-product -p </path/myproduct.pivotal>=                                                               |
| Upload stemcell to opsmanager via cli | =omcli upload-stemcell -s </path/mystemcell.tgz>=                                                                 |
| Use pivnet cli to download stemcell   | Once =pivnet login=, =pivnet download-product-files -p stemcells-ubuntu-xenial -r 170.15 -g '*vsphere*' -d /tmp/= |
| Show status of apply changes          | =omcli installation-log --id 2=, =omcli installation-log --id $installation_id=                                   |
| List all properties for a deployment  | =bosh deployments=, =omcli curl -p /api/v0/staged/products/${bosh_deployment}/properties -s=                      |
| json output                           | =omcli -k --format=json staged-products=                                                                          |
| Reference                             | [[https://cheatsheet.dennyzhang.com/cheatsheet-pks-A4][PKS CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-bosh-A4][Bosh CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4][Tile CheatSheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-uaa-A4][UAA CheatSheet]]                                                  |
** Get bosh/pks tile credential from om
| Name                                        | Summary                                                                                                                |
|---------------------------------------------+------------------------------------------------------------------------------------------------------------------------|
| bosh tile -> Bosh Commandline Credentials   | =omcli curl -p /api/v0/deployed/director/credentials/bosh2_commandline_credentials=                                    |
| Get ops-manager ca cert                     | =omcli curl -p /api/v0/certificate_authorities=                                                                        |
| pks tile -> Uaa Admin Password              | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.uaa_admin_password=                |
| pks tile -> Pks Uaa Management Admin Client | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.pks_uaa_management_admin_client=   |
| pks tile -> api server FQDN                 | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.pks_api_hostname=                  |
| pks tile -> pks certificates                | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.pivotal-container-service.pks_tls=            |
| pks tile -> whether wavefront is enabled    | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.wavefront=                         |
| pks tile -> wavefront token                 | =omcli curl -p /api/v0/deployed/products/${bosh_deployment}/credentials/.properties.wavefront.enabled.wavefront_token= |
** om product
| Name                        | Summary                                                                   |
|-----------------------------+---------------------------------------------------------------------------|
| Upload tile from cli        | =omcli upload-product -p </path/myproduct.pivotal>=                       |
| List products               | =omcli curl -s -p /api/v0/staged/products=                                |
| List all available products | =omcli available-products=, or =omcli curl -p /api/v0/available_products= |
| List all deployed products  | =omcli deployed-products=                                                 |
| Delete all unused products  | =omcli delete-unused-products=                                            |
| Delete product              | =omcli -k delete-product -p pivotal-container-service -v 1.3.0-build.3=   |
| Unstage product             | =omcli -k unstage-product -p pivotal-container-service=                   |
| Stage product               | =omcli -k stage-product -p pivotal-container-service -v 1.3.0-build.3=    |
** pivnet-cli
| Name                     | Comment                                                                                     |
|--------------------------+---------------------------------------------------------------------------------------------|
| [[https://github.com/pivotal-cf/pivnet-cli][pivnet]]                   | CLI to interact with Pivotal Network. [[https://github.com/pivotal-cf/pivnet-cli/releases/][Install pivnet CLI]]                                    |
| pivnet login             | =pivnet login --api-token $your_token=                                                      |
| pivnet download stemcell | =pivnet download-product-files -p stemcells-ubuntu-xenial -r 170.9 -g '*vsphere*' -d /tmp/= |
| List all products        | =pivnet products=                                                                           |
| Show product info        | =pivnet product -p pivotal-container-service=                                               |
** Tile Challenges
| Name                                         | Comment                                               |
|----------------------------------------------+-------------------------------------------------------|
| Tiles are big                                | It's usually GBs. Too big to distribute               |
| In Opsmanager, can't cancel task             | Costly to make mistakes                               |
| In Opsmanager, can't downgrade               | Inconvenient for development cycle                    |
| In Opsmanager, =review changes= is confusing | The review feature should be more informative         |
| Slow to apply changes                        | Usually it takes hours, while minutes in *kubernetes* |
** Tile Reference
| Name           | Command                                                                         |
|----------------+---------------------------------------------------------------------------------|
| [[https://github.com/pivotal-cf/kiln][kiln]]           | A command line tool to help you maintain tile metadata. [[https://github.com/pivotal-cf/kiln/releases][Download kiln]]           |
| Example        | [[https://github.com/pivotal-cf-experimental/ops-manager-example/blob/master/example-product/metadata/example-product.yml.erb][example-product/metadata/example-product.yml.erb]]                                |
| nozzle         |                                                                                 |
| firehose       |                                                                                 |
| service broker |                                                                                 |
| buildpack      |                                                                                 |
| Reference      | [[https://docs.pivotal.io/tiledev/2-1/product-template-reference.html#form-properties][Forms Reference]], [[https://docs.pivotal.io/tiledev/2-2/product-template-reference.html][Product Template Reference]], [[https://docs.pivotal.io/tiledev/2-2/property-reference.html][Property Reference]], [[https://docs.pivotal.io/tiledev/2-1/tile-generator.html][Tile Generator]] |
** Ops manager
| Name                | Command                                                                  |
|---------------------+--------------------------------------------------------------------------|
| Release folder      | =/var/tempest/releases=                                                  |
| Restart Ops Manager | =service tempest-web start=, =service tempest-web stop=                  |
| Grant file access   | =chown tempest-web:tempest-web /var/tempest/releases/<your-release.tgz>= |
| Tile entrance file  | =/var/tempest/workspaces/default/metadata/*.yml=                         |
| Tile jobs folder    | =/var/vcap/jobs=                                                         |
** om cli Online Help
#+BEGIN_EXAMPLE
> om --help
om helps you interact with an Ops Manager

Usage: om [options] <command> [<args>]
  --client-id, -c            string  Client ID for the Ops Manager VM (not required for unauthenticated commands, $OM_CLIENT_ID)
  --client-secret, -s        string  Client Secret for the Ops Manager VM (not required for unauthenticated commands, $OM_CLIENT_SECRET)
  --connect-timeout, -o      int     timeout in seconds to make TCP connections (default: 5)
  --format, -f               string  Format to print as (options: table,json) (default: table)
  --help, -h                 bool    prints this usage information (default: false)
  --password, -p             string  admin password for the Ops Manager VM (not required for unauthenticated commands, $OM_PASSWORD)
  --request-timeout, -r      int     timeout in seconds for HTTP requests to Ops Manager (default: 1800)
  --skip-ssl-validation, -k  bool    skip ssl certificate validation during http requests (default: false)
  --target, -t               string  location of the Ops Manager VM
  --trace, -tr               bool    prints HTTP requests and response payloads
  --username, -u             string  admin username for the Ops Manager VM (not required for unauthenticated commands, $OM_USERNAME)
  --version, -v              bool    prints the om release version (default: false)

Commands:
  activate-certificate-authority  activates a certificate authority on the Ops Manager
  apply-changes                   triggers an install on the Ops Manager targeted
  available-products              list available products
  certificate-authorities         lists certificates managed by Ops Manager
  certificate-authority           prints requested certificate authority
  config-template                 **EXPERIMENTAL** generates a config template for the product
  configure-authentication        configures Ops Manager with an internal userstore and admin user account
  configure-bosh                  **DEPRECATED** configures Ops Manager deployed bosh director
  configure-director              configures the director
  configure-product               configures a staged product
  configure-saml-authentication   configures Ops Manager with SAML authentication
  create-certificate-authority    creates a certificate authority on the Ops Manager
  create-vm-extension             creates a VM extension
  credential-references           list credential references for a deployed product
  credentials                     fetch credentials for a deployed product
  curl                            issues an authenticated API request
  delete-certificate-authority    deletes a certificate authority on the Ops Manager
  delete-installation             deletes all the products on the Ops Manager targeted
  delete-product                  deletes a product from the Ops Manager
  delete-unused-products          deletes unused products on the Ops Manager targeted
  deployed-manifest               prints the deployed manifest for a product
  deployed-products               lists deployed products
  errands                         list errands for a product
  export-installation             exports the installation of the target Ops Manager
  generate-certificate            generates a new certificate signed by Ops Manager's root CA
  generate-certificate-authority  generates a certificate authority on the Opsman
  help                            prints this usage information
  import-installation             imports a given installation to the Ops Manager targeted
  installation-log                output installation logs
  installations                   list recent installation events
  pending-changes                 lists pending changes
  regenerate-certificates         deletes all non-configurable certificates in Ops Manager...
  revert-staged-changes           reverts staged changes on the Ops Manager targeted
  set-errand-state                sets state for a product's errand
  stage-product                   stages a given product in the Ops Manager targeted
  staged-config                   **EXPERIMENTAL** generates a config from a staged product
  staged-manifest                 prints the staged manifest for a product
  staged-products                 lists staged products
  unstage-product                 unstages a given product from the Ops Manager targeted
  upload-product                  uploads a given product to the Ops Manager targeted
  upload-stemcell                 uploads a given stemcell to the Ops Manager targeted
  version                         prints the om release version
#+END_EXAMPLE
** pivnet cli Online Help
#+BEGIN_EXAMPLE
> pivnet --help
Usage:
  pivnet [OPTIONS] <command>

Application Options:
  -v, --version                  Print the version of this CLI and exit
      --format=[table|json|yaml] Format to print as (default: table)
      --verbose                  Display verbose output
      --profile=                 Name of profile (default: default)
      --config=                  Path to config file (default: /Users/zdenny/.pivnetrc)

Help Options:
  -h, --help                     Show this help message

Available commands:
  accept-eula                  Accept EULA (Available for pivots only) (aliases: ae)
  add-file-group               Add file group to release (aliases: afg)
  add-product-file             Add product file to release (aliases: apf)
  add-release-dependency       Add release dependency (aliases: ard)
  add-release-upgrade-path     Add release upgrade path (aliases: arup)
  add-user-group               Add user group to release (aliases: aug)
  add-user-group-member        Add user group member to group (aliases: augm)
  create-dependency-specifier  Create dependency specifier (aliases: cds)
  create-file-group            Create file group (aliases: cfg)
  create-product-file          Create product file (aliases: cpf)
  create-release               Create release (aliases: cr)
  create-user-group            Create user group (aliases: cug)
  curl                         Curl an endpoint (aliases: c)
  delete-dependency-specifier  Delete dependency specifier (aliases: dds)
  delete-file-group            Delete file group (aliases: dfg)
  delete-product-file          Delete product file (aliases: dpf)
  delete-release               Delete release (aliases: dr)
  delete-user-group            Delete user group (aliases: dug)
  dependency-specifier         Get dependency specifier (aliases: ds)
  dependency-specifiers        List dependency specifiers (aliases: dss)
  download-product-files       Download product files (aliases: dlpf)
  eula                         Show EULA (aliases: e)
  eulas                        List EULAs (aliases: es)
  file-group                   Show file group (aliases: fg)
  file-groups                  List file groups (aliases: fgs)
  help                         Print this help message (aliases: h)
  login                        Log in to Pivotal Network. (aliases: l)
  logout                       Log out from Pivotal Network.
  product                      Show product (aliases: p)
  product-file                 Show product file (aliases: pf)
  product-files                List product files (aliases: pfs)
  products                     List products (aliases: ps)
  release                      Show release (aliases: r)
  release-dependencies         List release dependencies (aliases: rds)
  release-types                List release types (aliases: rts)
  release-upgrade-paths        List release upgrade paths (aliases: rups)
  releases                     List releases (aliases: rs)
  remove-file-group            Remove file group from release (aliases: rfg)
  remove-product-file          Remove product file from release (aliases: rpf)
  remove-release-dependency    Remove release dependency (aliases: rrd)
  remove-release-upgrade-path  Remove release upgrade path (aliases: rrup)
  remove-user-group            Remove user group from release (aliases: rug)
  remove-user-group-member     Remove user group member from group (aliases: rugm)
  update-file-group            Update file group (aliases: ufg)
  update-product-file          Update product file (aliases: upf)
  update-release               Update release (aliases: ur)
  update-user-group            Update user group (aliases: uug)
  user-group                   Show user group (aliases: ug)
  user-groups                  List user groups (aliases: ugs)
  version                      Print the version of this CLI and exit (aliases: v)
#+END_EXAMPLE
** More Resources

License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].
#+BEGIN_HTML
<a href="https://cheatsheet.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>
<a href="https://cheatsheet.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png"></a>

<a href="https://www.linkedin.com/in/dennyzhang001"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a>
<a href="https://github.com/dennyzhang"><img align="bottom"src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a>
<a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img align="bottom" src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION:
#+KEYWORDS:
#+LATEX_HEADER: \usepackage[margin=0.6in]{geometry}
#+LaTeX_CLASS_OPTIONS: [8pt]
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lastpage}
#+LATEX_HEADER: \usepackage{fancyhdr}
#+LATEX_HEADER: \pagestyle{fancy}
#+LATEX_HEADER: \fancyhf{}
#+LATEX_HEADER: \rhead{Updated: \today}
#+LATEX_HEADER: \rfoot{\thepage\ of \pageref{LastPage}}
#+LATEX_HEADER: \lfoot{\href{https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-tile-A4}{GitHub: https://github.com/dennyzhang/cheatsheet.dennyzhang.com/tree/master/cheatsheet-tile-A4}}
#+LATEX_HEADER: \lhead{\href{https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-tile-A4}}
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:
#+LINK_HOME:
* TODO [#A] Blog: Avoid uploading pivotal file via scp, instead of from opsmanager :noexport:
https://clijockey.com/pcf-tile-uploads/
- Download kiln. No need for docker.
- Build tile in your ops manager or internal network
- Use om cli to upload the tile

sudo wget -O /usr/local/bin/kiln https://github.com/pivotal-cf/kiln/releases/download/0.14.0/kiln-linux
sudo chmod 755 /usr/local/bin/kiln

om -k -t "https://30.0.0.5" -u admin -p 'Admin!23' -k upload-product -p pivotal-container-service-1.2.3-build.1.pivotal
om -k -t "https://30.0.0.5" -u admin -p 'Admin!23' curl -p /api/v0/available_products

https://gist.github.com/patrickcrocker/1b84350d640f1e662b2e
https://github.com/pivotal-cf/om/issues/74
http://theblasfrompas.blogspot.com/2016/11/uploading-tiles-into-pivotal-cloud_18.html

ls -lth  /tmp/thin-body*

ls -lth /tmp/ops_manager/

time ./create-tile.sh

time omcli upload-product -p /home/denny/pks-tile/out/pivotal-container-service-1.2.9-build.1.pivotal
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] configure product                                      :noexport:
#+BEGIN_EXAMPLE
  def self.configure_product(properties)
    cmd = 'configure-product --product-name="pivotal-container-service" '
    cmd += format("--product-properties='%s' ", JSON.generate(properties))

    om_command(cmd)
  end

  def self.configured_networks
    cmd = "curl -p '/api/v0/staged/products/#{guid}/networks_and_azs'"

    JSON.parse(om_command(cmd))
  end

  def self.configure_product_network(properties)
    cmd = 'configure-product --product-name="pivotal-container-service" '
    cmd += format("--product-network='%s' ", JSON.generate(properties))

    om_command(cmd)
  end
#+END_EXAMPLE

* TODO Improvements/Wishlist for cloudfoundry Tile                 :noexport:
** Use container, instead of VM
** Small pack size
** Export or import tile configuration
** Shorter period of debug cycle
* TODO om command line usage                                       :noexport:
https://confluence.eng.vmware.com/display/OCDRI/om
https://confluence.eng.vmware.com/display/CNA/Use+Ops+Manager+%28OM%29+CLI
* TODO bosh tile                                                   :noexport:
** instance-groups
* TODO Buildpacks                                                  :noexport:
https://docs.pivotal.io/pivotalcf/2-2/buildpacks/index.html

* TODO tile packages                                               :noexport:
https://bosh.io/docs/packages/

https://gitlab.eng.vmware.com/PKS/wavefront-proxy-release/issues/14

https://gitlab.eng.vmware.com/PKS/pks-vrli-release/commit/7f8bda1c5ce9a9c44c2f41c6ee88a9f5ad5eb461

* TODO [#A] opsmanager: upgrade all clusters                       :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO How to remove packages in tile                              :noexport:
* TODO How to remove k8s load in tile                              :noexport:
* TODO No way to review the changes                                :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Run errand to do a feature cleanup                          :noexport:
* TODO Run hook a tile                                             :noexport:
* TODO [#A] How pks tile know the packages: wavefront 0.8.0+dev.2  :noexport:
#+BEGIN_EXAMPLE
   /Users/zdenny/git_code/kubernets_community/p-pks-integrations  ./create-tile.sh                                                                                                                                                     oratos-vmware-wavefront ✘ ✹  ✔ 0
Git SHA: [a25febbb6a27d2ccebc1faf249702f66a30045c7]
Reading release manifests...
Reading stemcell manifest...
Reading form files...
Reading instance group files...
Reading jobs files...
Reading property blueprint files...
Reading runtime config files...
Encoding icon...
Building /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding metadata/metadata.yml to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201802201637_uaa_url_to_api_hostname.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201802271027_uaa_credentials_rename.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201803061207_persistent_disk_type_to_worker_persistent_disk_type.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201803291019_master_creds.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201804131454_enabling_multi_azs.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201804180215_enable_k8s_public_ips.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding migrations/v1/201806141411_master_instances.js to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/backup-and-restore-sdk-1.8.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/bpm-0.6.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/cf-mysql-release-36.14.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/cfcr-etcd-release-1.4.1.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/docker-boshrelease-32.0.3.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/kubo-release-0.21.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/kubo-service-adapter-release-1.3.0-build.22.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/nsx-cf-cni-release-2.3.0.10066840.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/on-demand-service-broker-0.22.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-api-release-1.3.0-build.22.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-helpers-release-50.0.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-nsx-t-1.12.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-telemetry-0.9.2.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-telemetry-event-emitter-release-0.13.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/pks-vrli-0.6.0.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/sink-resources-release-0.1.6.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/syslog-migration-11.1.1.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/uaa-60.2.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Adding releases/wavefront-proxy-0.8.0+dev.2.tgz to /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Calculating md5 sum of /Users/zdenny/Downloads/pks-tile/out/pivotal-container-service-1.2.1-build.1.pivotal...
Calculated md5 sum: 5c16e6765b47e467f1e08f1104f500d8
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO Why my errand is not in the list                            :noexport:
bosh -d service-instance_97396f8f-8525-4a54-bac3-04d4af279a8d run-errand  unregister-errand
* TODO bosh run errand with a new version                          :noexport:
#+BEGIN_EXAMPLE
kubo@jumper:/home/denny/wavefront-proxy-release$ bosh -d service-instance_97396f8f-8525-4a54-bac3-04d4af279a8d releases
Using environment '30.0.0.11' as client 'ops_manager'

Name                      Version          Commit Hash
backup-and-restore-sdk    1.8.0*           8b305df
bosh-dns                  1.6.0*           f688d1f
bpm                       0.6.0*           b6f4675
cf-mysql                  36.14.0*         aa04a97
cfcr-etcd                 1.4.1*           30aa130
docker                    32.0.3*          b4d5a45
event-emitter             0.13.0*          27feca8
kubo                      0.21.0*          0aec88e
kubo-service-adapter      1.3.0-build.22*  01be9812
~                         1.2.0-build.166  233c31d3
nsx-cf-cni                2.3.0.10066840*  8254543+
on-demand-service-broker  0.22.0*          0c189e4
pks-api                   1.3.0-build.22*  621fe4bd
~                         1.2.0-build.166  0577bfa4
pks-helpers               50.0.0*          678c797
pks-nsx-t                 1.12.0*          ce49ecf
~                         1.11.0           a106043
pks-telemetry             0.9.2*           eefa567
pks-vrli                  0.6.0*           5cc4089
sink-resources-release    0.1.6*           d3bd5f1+
syslog-migration          11.1.1*          6d5673b
uaa                       60.2*            ebb5895
wavefront-proxy           0.8.0+dev.7      efd7611
~                         0.8.0+dev.6*     289eccb
~                         0.8.0+dev.5      721448a
~                         0.8.0+dev.4      721448a

(*) Currently deployed
(+) Uncommitted changes

26 releases

Succeeded
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] what is service broker in tile                         :noexport:
* TODO pks tile: wavefront-proxy                                   :noexport:
      - name: wavefront-proxy
        version: $( release "wavefront-proxy" | select "version" )
        jobs:
        - wavefront-proxy
      - name: pks-vrops
        version: $( release "pks-vrops" | select "version" )
        jobs:
        - vrops-ops-files

* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO bosh vm type                                                :noexport:
* TODO ops_files_paths vs lifecycle_errands/post_deploy            :noexport:
* TODO [#A] pks apply-addon: only apply: apply-specs, but not the followings :noexport:IMPORTANT:
#+BEGIN_EXAMPLE
XXX XXX [1:48 AM]
ah ok so i just followed along
if you run the errand using the instance group name, it will run the first job on the list

Denny Zhang [1:55 AM]
hmm, so only the first one? Is that a by-design limitation?
Any pointer about this?

XXX XXX [12:29 PM]
yeah only the first one, by design i guess
no pointer about it
its hidden in the director code
i can dig it out if you're interested
#+END_EXAMPLE
* TODO activate tile                                               :noexport:
#+BEGIN_EXAMPLE
kubo@jumper:~$ om --target https://30.0.0.5 --username admin --password 'Admin!23' -k stage-product -p pivotal-container-service -v 1.3.20-build.1
staging pivotal-container-service 1.3.20-build.1
could not execute "stage-product": failed to stage product: request failed: unexpected response:
HTTP/1.1 404 Not Found
Transfer-Encoding: chunked
Cache-Control: no-cache, no-store
Connection: keep-alive
Content-Type: application/json; charset=utf-8
Date: Thu, 06 Dec 2018 02:09:30 GMT
Expires: Fri, 01 Jan 1990 00:00:00 GMT
Pragma: no-cache
Server: nginx/1.10.3 (Ubuntu)
Strict-Transport-Security: max-age=15552000; includeSubDomains
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-Request-Id: 774bc8eb-5c85-482a-bf7a-50a23c49687b
X-Runtime: 0.060734
X-Xss-Protection: 1; mode=block

5f
{"errors":{"base":["Product 'pivotal-container-service-97a6f4404aa1dc557a53' is not active."]}}
0
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO [#A] om cli can't delete product, until we delete it from opsmanager :noexport:
* TODO How tile do the garbage clean                               :noexport:
* TODO How to manually delete the tile?                            :noexport:
* TODO [#A] tile: post_deploy: add vrops_register and vrops_unregister, instead of vrops_registration :noexport:IMPORTANT:
* TODO tile: triple parentheses                                    :noexport:
#+BEGIN_EXAMPLE
./instance-groups/pivotal-container-service.yml:74:  username: ((( odb_broker_basicauth.username )))
./instance-groups/pivotal-container-service.yml:75:  password: ((( odb_broker_basicauth.password )))
./jobs/event-emitter.yml:7:  aggregator_ca_cert: "(((telemetry_ca.certificate)))"
./jobs/pks-api.yml:16:      certificate: ((( pks_api_internal.certificate )))
./jobs/pks-api.yml:17:      private_key: ((( pks_api_internal.private_key )))
./jobs/pks-api.yml:18:    username: ((( pks_api_basicauth.username )))
./jobs/pks-api.yml:19:    password: ((( pks_api_basicauth.password )))
#+END_EXAMPLE
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* TODO k8s windows workload
* TODO tile get deployment status                                  :noexport:
* TODO tile om
could not execute "configure-product": yaml: line 2: mapping values are not allowed in this context
** HALF issue to enable telemetry
#+BEGIN_EXAMPLE
kubo@jumper:~$ cat enable-telemetry.yml
 product-properties:
     .properties.telemetry_selector:
         value: enabled
     .properties.telemetry_selector.enabled.telemetry_url:
         value: https://vcsa.vmware.com/ph-stg
#+END_EXAMPLE

#+BEGIN_EXAMPLE
 om -k \
   --username admin \
   --password 'Admin!23' \
   -t  https://30.0.0.5 \
   configure-product \
   -n \
   pivotal-container-service \
   -c enable-telemetry.yml

kubo@jumper:~$  om -k \
>    --username admin \
>    --password 'Admin!23' \
>    -t  https://30.0.0.5 \
>    configure-product \
>    -n \
>    pivotal-container-service \
>    -c enable-telemetry.yml
configuring product...
could not execute "configure-product": yaml: line 2: mapping values are not allowed in this context
#+END_EXAMPLE
* HALF ops yaml file add |                                         :noexport:
* Talk with opsmanager via REST API                                :noexport:
#+BEGIN_EXAMPLE
Reverse engineering for opsmanager HTTP requests
basic_dummy=$(echo -n 'opsman:' | base64)
curl -H "Authorization: Basic $basic_dummy" -d "grant_type=password&password=Admin%2123&username=admin" https://30.0.0.5/uaa/oauth/token -k
# testcase1
ACCESS_TOKEN=$(curl -H "Authorization: Basic $basic_dummy" -d "grant_type=password&password=Admin%2123&username=admin" https://30.0.0.5/uaa/oauth/token -k | jq -r .access_token)
curl -k -H "Authorization: Bearer $ACCESS_TOKEN" https://30.0.0.5/api/v0/deployed/director/credentials/bosh_commandline_credentials
# test case2
ACCESS_TOKEN=$(curl -H "Authorization: Basic $basic_dummy" -d "grant_type=password&password=Admin%2123&username=admin" https://30.0.0.5/uaa/oauth/token -k | jq -r .access_token)
curl -k -H "Authorization: Bearer $ACCESS_TOKEN" https://30.0.0.5/api/v0/staged/products
#+END_EXAMPLE
* Talk with bosh director                                          :noexport:
- UAA
```
cp /home/kubo/.ssh/id_rsa.common /tmp/id_rsa.common
chmod 400 /tmp/id_rsa.common

ssh -i /tmp/id_rsa.common ubuntu@30.0.0.5
basic_dummy=$(echo -n 'ops_manager:E86nP-mxI3o0vApKqEPQnZzv8IK77-9t' | base64) # ops manager
curl -H "Authorization: Basic $basic_dummy" -v -s -k https://88.0.0.11:8443/oauth/token?grant_type=client_credentials | jq .
```

- Bosh director without authentication

curl  -v -s -k https://88.0.0.11:25555/info | jq .

- Bosh director with authentication

curl  -v -s -k https://88.0.0.11:25555/info | jq .

token
* DONE talk with bosh director with HTTP API                       :noexport:
  CLOSED: [2020-02-11 Tue 15:43]
#+BEGIN_EXAMPLE
ssh -i /tmp/id_rsa.common -D 18080 -f -C -q -N ubuntu@30.0.0.5
lsof -i tcp:18080

curl -k -v -s -x socks5h://0:18080 https://88.0.0.11:25555/info
#+END_EXAMPLE
